library(OrcaData2)
library(tidyverse)
scr_token <- '950056F36783568FBA0900EFAE8AA4A4'
pch_token <- 'B17171C96E09FE75231D605CBCE4B249'
#pulling birth updates
birth <- get_orca_data(scr_token, form='pregnancy_update_email')
#Pulling peach participant info forms from screener
pch_info <- get_orca_data(scr_token, form='peach_participant_information')
#Pulling peach consent info from screener (to catch people who have consented but not done participant info)
pch_consents <- get_orca_data(scr_token, form='peach_informed_consent')
new_pch <- pch_consents %>%
filter(pch_consent_yesno == 1) %>%
select(record_id, consent_date_pch) %>%
left_join(pch_info, by='record_id')
#checking incomplete IDs
incomplete_forms <- new_pch %>%
filter(!is.na(consent_date_pch) & peach_participant_information_complete != 2)
incomplete_forms <- incomplete_forms$record_id
if (length(incomplete_forms) > 0) {
cat('The following IDs have completed consent but not participant information. Please follow up\n',
incomplete_forms)
}
View(birth)
#pulling birth updates
dob <- get_orca_field(scr_token, field='child_dob_update')
View(dob)
dob <- dob %>%
select(record_id, child_dob_update)
#getting relevant columns
new_pch <- new_pch %>%
filter(peach_participant_information_complete == 2) %>%
select(record_id, consent_date_pch, prenatal_yesno:pm_survey_time) %>%
left_join(dob, by='record_id')
View(new_pch)
library(OrcaData2)
library(tidyverse)
scr_token <- '950056F36783568FBA0900EFAE8AA4A4'
pch_token <- 'B17171C96E09FE75231D605CBCE4B249'
#pulling birth updates
dob <- get_orca_field(scr_token, field='child_dob_update')
dob <- dob %>%
select(record_id, child_dob_update)
#Pulling peach participant info forms from screener
pch_info <- get_orca_data(scr_token, form='peach_participant_information')
#Pulling peach consent info from screener (to catch people who have consented but not done participant info)
pch_consents <- get_orca_data(scr_token, form='peach_informed_consent')
new_pch <- pch_consents %>%
filter(pch_consent_yesno == 1) %>%
select(record_id, consent_date_pch) %>%
left_join(pch_info, by='record_id')
#checking incomplete IDs
incomplete_forms <- new_pch %>%
filter(!is.na(consent_date_pch) & peach_participant_information_complete != 2)
incomplete_forms <- incomplete_forms$record_id
if (length(incomplete_forms) > 0) {
cat('The following IDs have completed consent but not participant information. Please follow up\n',
incomplete_forms)
}
#getting relevant columns
new_pch <- new_pch %>%
filter(peach_participant_information_complete == 2) %>%
select(record_id, consent_date_pch, prenatal_yesno:pm_survey_time) %>%
left_join(dob, by='record_id')
#Pulling screener record ids from PEACH project - removing those from screener df who have already enrolled
pch_ids <- get_orca_field(pch_token, field='screener_record_id')
pch_ids <- unique(pch_ids$record_id)
pch_ids <- pch_ids[str_detect(pch_ids, 'pch_')]
import_file <- new_pch %>%
rename(screener_record_id = record_id)
#assigning new ids!
import_file$record_id <- assign_ids(pch_ids, import_file$screener_record_id, prefix='pch_')
View(import_file)
import_file <- import_file %>%
select(-consent_date_pch)
import_file <- import_file %>%
mutate(redcap_event_name = 'initial_data_arm_1')
import_data(pch_token, import_file)
