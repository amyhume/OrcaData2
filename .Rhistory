panel.border = element_rect(color="black", fill=NA, linewidth = 0.9),
axis.ticks = element_line(linewidth = 0.7),
axis.title = element_text(size=12, family="Arial"),
axis.text = element_text(size=10, family="Arial")) +
scale_x_discrete(labels = c('Low SES', 'Non-White', 'Rural')) +
scale_fill_manual(values = c('red', 'green'))
bar
bar <- demo_counts %>%
ggplot(aes(x = demo_group, y= percent, fill = cohort)) +
geom_bar(stat = "identity", position = "dodge", width=0.8) +
labs(y = "Percentage") +
theme(legend.title = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill="white"),
panel.border = element_rect(color="black", fill=NA, linewidth = 0.9),
axis.ticks = element_line(linewidth = 0.7),
axis.title = element_text(size=12, family="Arial"),
axis.text = element_text(size=10, family="Arial")) +
scale_x_discrete(labels = c('Low SES', 'Non-White', 'Rural')) +
scale_fill_manual(values = c('red', 'green'), labels = c('Postnatal', "Prenatal"))
bar
bar <- demo_counts %>%
ggplot(aes(x = demo_group, y= percent, fill = cohort)) +
geom_bar(stat = "identity", position = "dodge", width=0.8) +
labs(y = "Percentage") +
theme(legend.title = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill="white"),
panel.border = element_rect(color="black", fill=NA, linewidth = 0.9),
axis.ticks = element_line(linewidth = 0.7),
axis.title = element_text(size=12, family="Arial"),
axis.text = element_text(size=10, family="Arial")) +
scale_x_discrete(labels = c('Low SES', 'Non-White', 'Rural')) +
scale_fill_manual(values = c('#6699cc', '#ff8c42'), labels = c('Postnatal', "Prenatal"))
bar
View(cleaned_screener)
View(screener)
bar <- demo_counts %>%
ggplot(aes(x = demo_group, y= percent, fill = cohort)) +
geom_bar(stat = "identity", position = "dodge", width=0.8) +
labs(y = "Percentage") +
theme(legend.title = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill="white"),
panel.border = element_rect(color="black", fill=NA, linewidth = 0.9),
axis.ticks = element_line(linewidth = 0.7),
axis.title = element_text(size=12, family="Arial"),
axis.text = element_text(size=10, family="Arial")) +
scale_x_discrete(labels = c('Low SES', 'Non-White', 'Rural')) +
scale_fill_manual(values = c('#6699cc', '#fff275'), labels = c('Postnatal', "Prenatal"))
bar
bar <- demo_counts %>%
ggplot(aes(x = demo_group, y= percent, fill = cohort)) +
geom_bar(stat = "identity", position = "dodge", width=0.8, color='black') +
labs(y = "Percentage") +
theme(legend.title = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill="white"),
panel.border = element_rect(color="black", fill=NA, linewidth = 0.9),
axis.ticks = element_line(linewidth = 0.7),
axis.title = element_text(size=12, family="Arial"),
axis.text = element_text(size=10, family="Arial")) +
scale_x_discrete(labels = c('Low SES', 'Non-White', 'Rural')) +
scale_fill_manual(values = c('#6699cc', '#fff275'), labels = c('Postnatal', "Prenatal"))
bar
screener <- screener %>%
mutate(priority = ifelse(rural == 'Y' | low_ses == 'Y' | non_white == 'Y', 'High', 'Low'))
View(postnatal_demo)
data.frame(group = c('Prenatal', 'Postnatal'), count = c(nrow(subset(screener, priority == "High" & group == 1)), nrow(subset(screener, priority == "High" & group == 2))))
priority <- data.frame(group = c('Prenatal', 'Postnatal'), count = c(nrow(subset(screener, priority == "High" & group == 1)), nrow(subset(screener, priority == "High" & group == 2))))
priority$percent = priority$count/sum(priority$count) *100
View(priority)
priority_bar <- priority %>%
ggplot(aes(x= group, y=percent, fill = group)) +
geom_bar(stat = "identity", width = 0.8, color = 'black')
priority_bar
priority_bar <- priority %>%
ggplot(aes(x= group, y=percent, fill = group)) +
geom_bar(stat = "identity", width = 0.8, color = 'black') +
scale_fill_manual(values = c('#6699cc', '#fff275'), labels = c('Postnatal', "Prenatal"))
priority_bar
priority_bar <- priority %>%
ggplot(aes(x= group, y=percent, fill = group)) +
geom_bar(stat = "identity", width = 0.8, color = 'black') +
scale_fill_manual(values = c('#6699cc', '#fff275'), labels = c('Postnatal', "Prenatal")) +
labs(y = "Percentage") +
theme(legend.position = 'none')
priority_bar
priority_bar <- priority %>%
ggplot(aes(x= group, y=percent, fill = group)) +
geom_bar(stat = "identity", width = 0.6, color = 'black') +
scale_fill_manual(values = c('#6699cc', '#fff275'), labels = c('Postnatal', "Prenatal")) +
labs(y = "Percentage") +
theme(legend.position = 'none')
priority_bar
priority_bar <- priority %>%
ggplot(aes(x= group, y=percent, fill = group)) +
geom_bar(stat = "identity", width = 0.7, color = 'black') +
scale_fill_manual(values = c('#6699cc', '#fff275'), labels = c('Postnatal', "Prenatal")) +
labs(y = "Percentage") +
theme(legend.position = 'none')
priority_bar
priority_bar <- priority %>%
ggplot(aes(x= group, y=percent, fill = group)) +
geom_bar(stat = "identity", width = 0.7, color = 'black') +
scale_fill_manual(values = c('#6699cc', '#fff275'), labels = c('Postnatal', "Prenatal")) +
labs(y = "Percentage") +
theme(legend.position = 'none',
axis.title.x = element_blank())
priority_bar
priority_bar <- priority %>%
ggplot(aes(x= group, y=percent, fill = group)) +
geom_bar(stat = "identity", width = 0.7, color = 'black') +
scale_fill_manual(values = c('#6699cc', '#fff275'), labels = c('Postnatal', "Prenatal")) +
labs(y = "Percentage") +
theme(legend.position = 'none',
axis.title.x = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill="white"),
panel.border = element_rect(color="black", fill=NA, linewidth = 0.9),
axis.ticks = element_line(linewidth = 0.7),
axis.title = element_text(size=12, family="Arial"),
axis.text = element_text(size=10, family="Arial"))
priority_bar
priority_bar <- priority %>%
ggplot(aes(x= group, y=percent, fill = group)) +
geom_bar(stat = "identity", width = 0.7, color = 'black') +
scale_fill_manual(values = c('#6699cc', '#fff275'), labels = c('Postnatal', "Prenatal")) +
labs(y = "Percentage") +
theme(legend.position = 'none',
panel.grid = element_blank(),
panel.background = element_rect(fill="white"),
panel.border = element_rect(color="black", fill=NA, linewidth = 0.9),
axis.ticks = element_line(linewidth = 0.7),
axis.title = element_text(size=12, family="Arial"),
axis.text = element_text(size=10, family="Arial"))
priority_bar
priority_bar <- priority %>%
ggplot(aes(x= group, y=percent, fill = group)) +
geom_bar(stat = "identity", width = 0.7, color = 'black') +
scale_fill_manual(values = c('#6699cc', '#fff275'), labels = c('Postnatal', "Prenatal")) +
labs(y = "Percentage High Priority") +
theme(legend.position = 'none',
axis.title.x = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill="white"),
panel.border = element_rect(color="black", fill=NA, linewidth = 0.9),
axis.ticks = element_line(linewidth = 0.7),
axis.title = element_text(size=12, family="Arial"),
axis.text = element_text(size=10, family="Arial"))
priority_bar
bar
prenatal_complete <- screener %>%
filter(prenatal_complete == 1)
View(prenatal_complete_demo)
prenatal_complete_bar <- prenatal_complete_demo %>%
ggplot(aes(x = demo_group, y= percent, fill = demo_group)) +
geom_bar(stat = "identity")
prenatal_complete_bar
View(numbers)
setwd("/Users/amyhume/Documents/ORCA/orca 2.0 recruitment graphs")
write_csv(numbers, 'numbers.csv', na="")
spanish_speaking <- nrow(subset(screener, rec_language_preference == 2))
spanish_speaking_percent <- nrow(subset(screener, rec_language_preference == 2)) / nrow(screener) *100
nrow(subset(screener, rec_language_preference == 1))
spanish_demos <- data.frame(group = c('Spanish', 'Spanish', 'Spanish', "English", "English", "English"),
demo = c("Low SES", "Non-White", "Rural", "Low SES", "Non-White", "Rural"),
count = c(nrow(subset(screener, rec_language_preference == 2 & low_ses == "Y")), nrow(subset(screener, rec_language_preference == 2 & non_white == "Y")), nrow(subset(screener, rec_language_preference == 2 & rural == "Y")),
nrow(subset(screener, rec_language_preference == 1 & low_ses == "Y")), nrow(subset(screener, rec_language_preference == 1 & non_white == "Y")), nrow(subset(screener, rec_language_preference == 1 & rural == "Y"))))
View(spanish_demos)
View(spanish_demos)
spanish_total <- sum(subset(screener, group = "Spanish")$count)
spanish_total <- sum(subset(spanish_demos, group = "Spanish")$count)
View(spanish_demos)
spanish_total <- spanish_demos %>%
filter(group == "Spanish")
spanish_total <- sum(spanish_total$count)
spanish <- nrow(subset(screener, rec_language_preference == 2))
spanish <- nrow(subset(screener, rec_language_preference == 2 & low_ses == "Y"))
spanish <- nrow(subset(screener, rec_language_preference == 2 & non_white == "Y"))
View(demo_counts)
View(demo_counts)
#Recruitment Demographics
#devtools::install_github("amyhume/OrcaData2")
library(OrcaData2)
library(tidyverse)
token <- '950056F36783568FBA0900EFAE8AA4A4'
screener <- get_orca_data(token, form = "orca_screener_survey")
recruited <- get_orca_field(token, field = "orca_contact_yesno")
cleaned_screener <- get_orca_screener(token)
consented_prenatal <- get_orca_field(token, field = "orca_prenatal_consent_complete")
finished_prenatal <- get_orca_field(token, field = "prams_complete")
consented_prenatal <- consented_prenatal %>%
filter(orca_prenatal_consent_complete == 2)
finished_prenatal <- finished_prenatal %>%
filter(prams_complete == 2)
#cleaning screener
screener <- screener %>%
select(-redcap_event_name) %>%
left_join(recruited, by="record_id") %>%
select(-redcap_event_name)
screener <- screener %>%
filter(orca_contact_yesno == 1)
screener <- screener %>%
select(record_id, orca_screener_survey_timestamp,rec_language_preference, rec_pregnant_yesno, rec_due_date,
rec_child_yesno, rec_child_dob, rec_relationship_child, rec_twin, rec_address_zipcode, rec_race___1:rec_source)
cleaned_screener <- cleaned_screener %>%
select(screener_record_id, location,rural, non_white, low_ses, expected_invite_date) %>%
rename(record_id = screener_record_id)
screener <- screener %>%
left_join(cleaned_screener, by="record_id")
prenatal <- screener %>%
filter(rec_pregnant_yesno == 1)
screener$age_at_screener <- as.numeric(difftime(screener$orca_screener_survey_timestamp, screener$rec_child_dob, units = "days"))
#PRENATAL
prenatal$days_to_birth <- as.numeric(difftime(prenatal$rec_due_date, Sys.Date(), units = "days"))
under_32_n <- nrow(subset(prenatal, days_to_birth > 56))
#TOTAL DEMOS
screener <- screener %>%
mutate(group = ifelse(rec_pregnant_yesno == 1 & (rec_child_yesno == 0 | is.na(rec_child_dob)), 1,
ifelse(rec_pregnant_yesno == 1 & rec_child_yesno == 1 & age_at_screener > 137, 1,
ifelse((rec_pregnant_yesno == 0 | is.na(rec_pregnant_yesno)) & rec_child_yesno == 1 & age_at_screener <= 137, 2,
ifelse(rec_pregnant_yesno == 1 & rec_child_yesno == 1 & age_at_screener <= 137, 3, 'cannot calculate')))))
screener$days_to_birth = as.numeric(difftime(screener$rec_due_date, Sys.Date(),units = "days"))
screener$current_age = as.numeric(difftime(Sys.Date(), screener$rec_child_dob, units = "days"))
#number in each group
prenatal_total <- nrow(subset(screener, group == 1))
postnatal_total <- nrow(subset(screener, group == 2))
prenatal_invited <- nrow(subset(screener, group == 1 & days_to_birth <= 56))
prenatal_uninvited <- nrow(subset(screener, group == 1 & days_to_birth > 56))
newborn <- nrow(subset(screener, group == 2 & current_age < 107))
four_month <- nrow(subset(screener, group == 2 & current_age >= 107))
numbers <- data.frame(group = c("prenatal", "postnatal"), total = c(prenatal_total, postnatal_total),
too_young = c(prenatal_uninvited, newborn), invited = c(prenatal_invited, four_month), consented = c(nrow(consented_prenatal), NA),
complete = c(nrow(finished_prenatal), NA))
#total_race
screener$rec_race___1 <- gsub("1", "American Indian/Alaska Native", screener$rec_race___1)
screener$rec_race___2 <- gsub("1", "Asian", screener$rec_race___2)
screener$rec_race___3 <- gsub("1", "Black/African American/African", screener$rec_race___3)
screener$rec_race___4 <- gsub("1", "Hispanic/Latino", screener$rec_race___4)
screener$rec_race___5 <- gsub("1", "Middle Eastern/North African", screener$rec_race___5)
screener$rec_race___6 <- gsub("1", "Native Hawaiian", screener$rec_race___6)
screener$rec_race___7 <- gsub("1", "White", screener$rec_race___7)
screener$rec_race___8 <- gsub("1", "None fully describe", screener$rec_race___8)
screener$rec_race___9 <- gsub("1", "Prefer not to answer", screener$rec_race___9)
screener[, 11:19] <- replace(screener[, 11:19], screener[, 11:19] == 0, NA)
screener <- unite(screener, "race", rec_race___1:rec_race___9, na.rm = T)
screener <- screener %>%
mutate(final_race = ifelse(str_detect(race, '_'), "More than 1", race))
race_counts <- data.frame(table(screener$final_race)) %>%
filter(Var1 != "")
race_counts$percent <- race_counts$Freq / sum(race_counts$Freq) *100
#target groups per recruitment group
#1 - prenatal total & prenatal complete
#2 - postnatal total
finished_prenatal <- finished_prenatal %>%
select(record_id) %>%
mutate(prenatal_complete = 1)
screener <- screener %>%
left_join(finished_prenatal, by="record_id")
#bar chart showing % for each target population
prenatal <- screener %>%
filter(group == 1)
prenatal_demo <- data.frame(
demo_group = c("non_white", "low_ses", "rural"),
count = c(nrow(subset(prenatal, non_white == "Y")), nrow(subset(prenatal, low_ses == "Y")), nrow(subset(prenatal, rural == "Y")))
)
prenatal_demo$percent <- prenatal_demo$count / sum(prenatal_demo$count) * 100
prenatal_bar <- prenatal_demo %>%
ggplot(aes(x = demo_group, y= percent, fill = demo_group)) +
geom_bar(stat = "identity")
prenatal_bar
prenatal_complete_demo <- data.frame(
demo_group = c("non_white", "low_ses", "rural"),
count = c(nrow(subset(prenatal, non_white == "Y" & prenatal_complete == 1)), nrow(subset(prenatal, low_ses == "Y"& prenatal_complete == 1)), nrow(subset(prenatal, rural == "Y"& prenatal_complete == 1)))
)
prenatal_complete_demo$percent <- prenatal_complete_demo$count / sum(prenatal_complete_demo$count)*100
prenatal_complete_bar <- prenatal_complete_demo %>%
ggplot(aes(x = demo_group, y= percent, fill = demo_group)) +
geom_bar(stat = "identity")
prenatal_complete_bar
postnatal <- screener %>%
filter(group == 2)
postnatal_demo <- data.frame(
demo_group = c("non_white", "low_ses", "rural"),
count = c(nrow(subset(postnatal, non_white == "Y")), nrow(subset(postnatal, low_ses == "Y")), nrow(subset(postnatal, rural == "Y")))
)
View(numbers)
View(numbers)
postnatal_demo$percent <- postnatal_demo$count / 85*100
View(postnatal_demo)
postnatal_demo <- postnatal_demo %>%
mutate(cohort = 'postnatal')
prenatal_demo$percent <- prenatal_demo$count / 119 * 100
View(prenatal_demo)
demo_counts <- prenatal_demo %>%
mutate(cohort = 'prenatal') %>%
full_join(postnatal_demo)
View(demo_counts)
bar <- demo_counts %>%
ggplot(aes(x = demo_group, y= percent, fill = cohort)) +
geom_bar(stat = "identity", position = "dodge", width=0.8, color='black') +
labs(y = "Percentage") +
theme(legend.title = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill="white"),
panel.border = element_rect(color="black", fill=NA, linewidth = 0.9),
axis.ticks = element_line(linewidth = 0.7),
axis.title = element_text(size=12, family="Arial"),
axis.text = element_text(size=10, family="Arial")) +
scale_x_discrete(labels = c('Low SES', 'Non-White', 'Rural')) +
scale_fill_manual(values = c('#6699cc', '#fff275'), labels = c('Postnatal', "Prenatal"))
bar
spanish_demos <- data.frame(group = c('Spanish', 'Spanish', 'Spanish', "English", "English", "English"),
demo = c("Low SES", "Non-White", "Rural", "Low SES", "Non-White", "Rural"),
count = c(nrow(subset(screener, rec_language_preference == 2 & low_ses == "Y")), nrow(subset(screener, rec_language_preference == 2 & non_white == "Y")), nrow(subset(screener, rec_language_preference == 2 & rural == "Y")),
nrow(subset(screener, rec_language_preference == 1 & low_ses == "Y")), nrow(subset(screener, rec_language_preference == 1 & non_white == "Y")), nrow(subset(screener, rec_language_preference == 1 & rural == "Y"))))
View(spanish_demos)
n_spanish <- nrow(subset(screener, rec_language_preference == 2))
n_english <- nrow(subset(screener, rec_language_preference == 1))
row <- 1
total_value <- ifelse(spanish_demos$group[row] == "Spanish", n_spanish, n_english)
row <- 2
total_value <- ifelse(spanish_demos$group[row] == "Spanish", n_spanish, n_english)
row <- 3
total_value <- ifelse(spanish_demos$group[row] == "Spanish", n_spanish, n_english)
row <- 4
total_value <- ifelse(spanish_demos$group[row] == "Spanish", n_spanish, n_english)
for (row in 1:nrow(spanish_demos)) {
total_value <- ifelse(spanish_demos$group[row] == "Spanish", n_spanish, n_english)
spanish_demos$percent[row] <- spanish_demos$count[row] / total_value * 100
}
View(spanish_demos)
language_bar <- spanish_demos %>%
ggplot(aes(x=demo, y=percent, fill=group)) +
geom_bar(stat="identity", position = "dodge", width = 0.8, color="black")
language_bar
language_bar <- spanish_demos %>%
ggplot(aes(x=demo, y=percent, fill=group)) +
geom_bar(stat="identity", position = "dodge", width = 0.8, color="black") +
theme(legend.title = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill="white"),
panel.border = element_rect(color="black", fill=NA, linewidth = 0.9),
axis.ticks = element_line(linewidth = 0.7),
axis.title = element_text(size=12, family="Arial"),
axis.text = element_text(size=10, family="Arial")) +
scale_x_discrete(labels = c('Low SES', 'Non-White', 'Rural'))
language_bar
View(prenatal)
language_bar <- spanish_demos %>%
ggplot(aes(x=demo, y=percent, fill=group)) +
geom_bar(stat="identity", position = "dodge", width = 0.8, color="black") +
theme(legend.title = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill="white"),
panel.border = element_rect(color="black", fill=NA, linewidth = 0.9),
axis.ticks = element_line(linewidth = 0.7),
axis.title = element_text(size=12, family="Arial"),
axis.text = element_text(size=10, family="Arial")) +
scale_x_discrete(labels = c('Low SES', 'Non-White', 'Rural')) +
scale_fill_manual(values = c("#FFB347", "#AEEEEE"))
language_bar
language_bar <- spanish_demos %>%
ggplot(aes(x=demo, y=percent, fill=group)) +
geom_bar(stat="identity", position = "dodge", width = 0.8, color="black") +
theme(legend.title = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill="white"),
panel.border = element_rect(color="black", fill=NA, linewidth = 0.9),
axis.ticks = element_line(linewidth = 0.7),
axis.title = element_text(size=12, family="Arial"),
axis.text = element_text(size=10, family="Arial")) +
scale_x_discrete(labels = c('Low SES', 'Non-White', 'Rural')) +
scale_fill_manual(values = c("#AEEEEE", "#FFB347"))
language_bar
language_bar <- spanish_demos %>%
ggplot(aes(x=demo, y=percent, fill=group)) +
geom_bar(stat="identity", position = "dodge", width = 0.8, color="black") +
theme(legend.title = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill="white"),
panel.border = element_rect(color="black", fill=NA, linewidth = 0.9),
axis.ticks = element_line(linewidth = 0.7),
axis.title = element_text(size=12, family="Arial"),
axis.text = element_text(size=10, family="Arial")) +
scale_x_discrete(labels = c('Low SES', 'Non-White', 'Rural')) +
scale_fill_manual(values = c("#AEEEEE", "#FFB347")) +
labs(y = "Percentage")
language_bar
spanish_perc <- n_spanish / nrow(screener)*100
language_bar <- spanish_demos %>%
ggplot(aes(x=demo, y=percent, fill=group)) +
geom_bar(stat="identity", position = "dodge", width = 0.8, color="black") +
theme(legend.title = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill="white"),
panel.border = element_rect(color="black", fill=NA, linewidth = 0.9),
axis.ticks = element_line(linewidth = 0.7),
axis.title = element_text(size=12, family="Arial"),
axis.text = element_text(size=10, family="Arial")) +
scale_x_discrete(labels = c('Low SES', 'Non-White', 'Rural')) +
scale_fill_manual(values = c("#AEEEEE", "#FFB347"), labels = c("English", "Spanish (22.5%)")) +
labs(y = "Percentage")
language_bar
language_bar <- spanish_demos %>%
ggplot(aes(x=demo, y=percent, fill=group)) +
geom_bar(stat="identity", position = "dodge", width = 0.8, color="black") +
theme(legend.title = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill="white"),
panel.border = element_rect(color="black", fill=NA, linewidth = 0.9),
axis.ticks = element_line(linewidth = 0.7),
axis.title = element_text(size=12, family="Arial"),
axis.text = element_text(size=10, family="Arial")) +
scale_x_discrete(labels = c('Low SES', 'Non-White', 'Rural')) +
scale_fill_manual(values = c("#AEEEEE", "#FFB347"), labels = c("English", "Spanish (22.5%)")) +
labs(y = "Percentage", title = "Demographic Groups of English vs. Spanish Responses")
language_bar
bar <- demo_counts %>%
ggplot(aes(x = demo_group, y= percent, fill = cohort)) +
geom_bar(stat = "identity", position = "dodge", width=0.8, color='black') +
labs(y = "Percentage") +
theme(legend.title = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill="white"),
panel.border = element_rect(color="black", fill=NA, linewidth = 0.9),
axis.ticks = element_line(linewidth = 0.7),
axis.title = element_text(size=12, family="Arial"),
axis.text = element_text(size=10, family="Arial")) +
scale_x_discrete(labels = c('Low SES', 'Non-White', 'Rural')) +
scale_fill_manual(values = c('#6699cc', '#fff275'), labels = c('Postnatal', "Prenatal"))
bar
bar <- demo_counts %>%
ggplot(aes(x = demo_group, y= percent, fill = cohort)) +
geom_bar(stat = "identity", position = "dodge", width=0.8, color='black') +
labs(y = "Percentage", title = "Demographic Groups of Pre/Postnatal Responses") +
theme(legend.title = element_blank(),
axis.title.x = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill="white"),
panel.border = element_rect(color="black", fill=NA, linewidth = 0.9),
axis.ticks = element_line(linewidth = 0.7),
axis.title = element_text(size=12, family="Arial"),
axis.text = element_text(size=10, family="Arial")) +
scale_x_discrete(labels = c('Low SES', 'Non-White', 'Rural')) +
scale_fill_manual(values = c('#6699cc', '#fff275'), labels = c('Postnatal', "Prenatal"))
bar
ages <- get_orca_field(token, field = "child_dob")
token <- '25120FD84FFDA3B220617BDF23B680CD'
ages <- get_orca_field(token, field = "child_dob")
View(ages)
ages$current_age <- as.numeric(difftime(Sys.Date(), ages$child_dob), units = "days")
View(languages)
library(OrcaData2)
token <- '950056F36783568FBA0900EFAE8AA4A4'
library(tidyverse)
get_eligible_responses <- function(token) {
screener <- get_orca_screener(token)
screener <- dplyr::rename(screener, record_id = screener_record_id)
eligible <- get_orca_field(token, field='orca_contact_yesno')
eligible <- dplyr::filter(eligible, orca_contact_yesno == 1)
screener <- dplyr::left_join(screener, eligible, by="record_id")
return(screener)
}
data <- get_eligible_responses(token)
View(data)
get_eligible_responses <- function(token, min_date_time = "2022-01-01 00:00:00") {
screener <- get_orca_screener(token, min_date_time = min_date_time)
screener <- dplyr::rename(screener, record_id = screener_record_id)
eligible <- get_orca_field(token, field='orca_contact_yesno')
eligible <- dplyr::filter(eligible, orca_contact_yesno == 1)
screener <- dplyr::right_join(screener, eligible, by="record_id")
return(screener)
}
data <- get_eligible_responses(token)
View(data)
View(data)
get_eligible_responses <- function(token, min_date_time = "2022-01-01 00:00:00") {
screener <- get_orca_screener(token, min_date_time = min_date_time)
screener <- dplyr::rename(screener, record_id = screener_record_id)
eligible <- get_orca_field(token, field='orca_contact_yesno')
eligible <- dplyr::filter(eligible, orca_contact_yesno == 1)
screener <- dplyr::right_join(screener, eligible, by="record_id")
screener$days_to_birth = as.numeric(difftime(screener$due_date, Sys.Date(), units="days"))
screener$age_at_screener = as.numeric(difftime(screener$timestamp, screener$child_dob, units="days"))
screener <- dplyr::mutate(screener, group = ifelse(!is.na(child_dob) & is.na(due_date) & age_at_screener <= 137, 'postnatal',
ifelse(!is.na(due_date) & is.na(child_dob), 'prenatal',
ifelse(!is.na(due_date) & !is.na(child_dob) & child_dob > 137, 'prenatal', 'hm'))))
screener <- dplyr::select(screener, record_id, group)
return(screener)
}
data <- get_eligible_responses(token)
View(data)
data <- data %>%
filter(group == 'postnatal')
setwd("/Users/amyhume/OrcaData2")
roxygen2::roxygenise()
remove.packages("OrcaData2")
devtools::install_github('amyhume/OrcaData2')
