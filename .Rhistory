left_join(dob2, by='record_id') %>%
select(-redcap_event_name.x, -redcap_event_name.y, -redcap_event_name)
total <- cohort %>%
left_join(due_date, by='record_id') %>%
left_join(dob, by='record_id') %>%
left_join(dob2, by='record_id') %>%
select(record_id, rec_due_date, rec_child_dob, child_dob_update)
total <- total %>%
mutate(final_dob = ifelse(is.na(rec_due_date) & is.na(child_dob_update) & !is.na(rec_child_dob), rec_child_dob,
ifelse(!is.na(rec_due_date) & is.na(child_dob_update), rec_due_date,
ifelse(is.na(rec_due_date) & !is.na(child_dob_update), child_dob_update, 'ERROR')))
}
total <- total %>%
mutate(final_dob = ifelse(is.na(rec_due_date) & is.na(child_dob_update) & !is.na(rec_child_dob), rec_child_dob,
ifelse(!is.na(rec_due_date) & is.na(child_dob_update), rec_due_date,
ifelse(is.na(rec_due_date) & !is.na(child_dob_update), child_dob_update, 'ERROR')))
}
total <- total %>%
mutate(final_dob = ifelse(is.na(rec_due_date) & is.na(child_dob_update) & !is.na(rec_child_dob), rec_child_dob,
ifelse(!is.na(rec_due_date) & is.na(child_dob_update), rec_due_date,
ifelse(is.na(rec_due_date) & !is.na(child_dob_update), child_dob_update, 'ERROR'))))
total <- total %>%
mutate(final_dob = ifelse(is.na(rec_due_date) & is.na(child_dob_update) & !is.na(rec_child_dob), rec_child_dob,
ifelse(!is.na(rec_due_date) & is.na(child_dob_update), rec_due_date,
ifelse(is.na(rec_due_date) & !is.na(child_dob_update), child_dob_update,
ifelse(!is.na(rec_due_date) & !is.na(rec_child_dob) & !is.na(child_dob_update), child_dob_update, 'ERROR')))))
total <- total %>%
mutate(final_dob = ifelse(is.na(rec_due_date) & is.na(child_dob_update) & !is.na(rec_child_dob), rec_child_dob,
ifelse(!is.na(rec_due_date) & is.na(child_dob_update) & is.na(rec_child_dob), rec_due_date,
ifelse(is.na(rec_due_date) & !is.na(child_dob_update) & is.na(rec_child_dob), child_dob_update,
ifelse(!is.na(rec_due_date) & !is.na(rec_child_dob) & !is.na(child_dob_update), child_dob_update, 'ERROR')))))
View(total)
total <- total %>%
mutate(final_dob = ifelse(is.na(rec_due_date) & is.na(child_dob_update) & !is.na(rec_child_dob), rec_child_dob,
ifelse(!is.na(rec_due_date) & is.na(child_dob_update), rec_due_date,
ifelse(!is.na(rec_due_date) & !is.na(child_dob_update), child_dob_update,
ifelse(!is.na(rec_due_date) & !is.na(rec_child_dob) & !is.na(child_dob_update), child_dob_update, 'ERROR')))))
View(total)
nrow(subset(total, final_dob == 'ERROR'))
total <- total %>%
mutate(final_dob = ifelse(is.na(rec_due_date) & is.na(child_dob_update) & !is.na(rec_child_dob), rec_child_dob,
ifelse(!is.na(rec_due_date) & is.na(child_dob_update), rec_due_date,
ifelse(!is.na(rec_due_date) & !is.na(child_dob_update), child_dob_update,
ifelse(!is.na(rec_due_date) & !is.na(rec_child_dob) & !is.na(child_dob_update), child_dob_update,
ifelse(is.na(rec_due_date) & !is.na(rec_child_dob) & !is.na(child_dob_update), child_dob_update, 'ERROR'))))))
nrow(subset(total, final_dob == 'ERROR'))
total$final_dob <- as.Date(total$final_dob, origin='1970-01-01')
total$final_dob <- as.Date(total$final_dob, origin='1970-01-01')
str(total$final_dob)
total$final_dob <- as.numeric(total$final_dob)
total$final_dob <- as.Date(total$final_dob, origin='1970-01-01')
get_screener_child_dob <- function(token) {
library(dplyr)
cohort <- get_orca_cohort(token, screener=T)
due_date <- get_orca_field(token, field='rec_due_date')
dob <- get_orca_field(token, field='rec_child_dob')
dob2 <- get_orca_field(token, field='child_dob_update')
total <- cohort %>%
left_join(due_date, by='record_id') %>%
left_join(dob, by='record_id') %>%
left_join(dob2, by='record_id') %>%
select(record_id, rec_due_date, rec_child_dob, child_dob_update)
total <- total %>%
mutate(final_dob = ifelse(is.na(rec_due_date) & is.na(child_dob_update) & !is.na(rec_child_dob), rec_child_dob,
ifelse(!is.na(rec_due_date) & is.na(child_dob_update), rec_due_date,
ifelse(!is.na(rec_due_date) & !is.na(child_dob_update), child_dob_update,
ifelse(!is.na(rec_due_date) & !is.na(rec_child_dob) & !is.na(child_dob_update), child_dob_update,
ifelse(is.na(rec_due_date) & !is.na(rec_child_dob) & !is.na(child_dob_update), child_dob_update, 'ERROR'))))))
total$final_dob <- as.numeric(total$final_dob)
total$final_dob <- as.Date(total$final_dob, origin='1970-01-01')
return(total)
}
child_dob <- get_screener_child_dob(token)
child_dob <- child_dob %>%
select(record_id, final_dob)
View(child_dob)
screener_cohort <- screener_cohort %>%
left_join(child_dob, by='record_id') %>%
filter(orca == 1) %>%
select(record_id, final_dob)
screener_cohort$exp_invite_date = screener_cohort$final_dob + 107
screener_cohort <- screener_cohort %>%
filter(exp_invite_date > Sys.Date())
View(screener_cohort)
orca_cohort <- get_orca_cohort(token)
records <- get_orca_field(token, field='record_id')
records <- records %>%
filter(redcap_event_name == 'orca_4month_arm_1') %>%
select(record_id)
#eligibility fields
to_keep <- get_orca_field(token, field='optout_yesno') %>%
select(-redcap_event_name)
token <- '25120FD84FFDA3B220617BDF23B680CD'
orca_cohort <- get_orca_cohort(token)
View(orca_cohort)
dob <- get_orca_field(token, field='child_dob') %>%
select(-redcap_event_name)
View(dob)
orca_cohort <- get_orca_cohort(token) %>%
select(record_id)
data <- orca_cohort %>%
left_join(dob, by='record_id')
View(data)
timepoint = '8m'
age_in <- case_when(
timepoint == '4m' ~ 107,
timepoint == '8m' ~ 228,
timepoint == '12m' ~  350,
timepoint == 'newborn' ~ 7,
timepoint == 'prenatal' ~ -84
)
data <- data %>%
mutate(exp_invite_date = child_dob + age_in)
data <- data %>%
mutate(exp_invite_date = child_dob + age_in) %>%
select(-child_dob) %>%
filter(exp_invite_date > Sys.Date())
data <- data %>%
mutate(exp_invite_date = child_dob + age_in,
invite_month = format(exp_invite_date, "%b %y")) %>%
select(-child_dob) %>%
filter(exp_invite_date > Sys.Date())
orca_cohort <- get_orca_cohort(token) %>%
select(record_id)
dob <- get_orca_field(token, field='child_dob') %>%
select(-redcap_event_name)
data <- orca_cohort %>%
left_join(dob, by='record_id')
data <- data %>%
mutate(exp_invite_date = child_dob + age_in,
invite_month = format(exp_invite_date, "%b %y")) %>%
select(-child_dob) %>%
filter(exp_invite_date > Sys.Date())
#GRAPH
data$invite_month <- factor(data$invite_month, levels = unique(data$invite_month))
title = paste0("Future invites by month for ", timepoint, " timepoint")
title
plot <- ggplot(data, aes(x = invite_month)) +
geom_bar(position = "stack", width = 0.8) +
labs(title = title,
x = "Month-Year",
y = "Number of Invites") +
theme(panel.background = element_rect(fill="white"),
panel.border=element_rect(color="#3C1939", fill=NA, linewidth=1),
legend.title = element_blank(),
axis.text = element_text(family = 'Arial', size = 10),
axis.title = element_text(family='Arial', size=12),
legend.text = element_text(family='Arial', size=11),
title = element_text(family="Arial", size=14)) +
scale_fill_manual(values = colors)
plot
plot <- ggplot(all_dobs, aes(x = invite_month, fill = factor(longitudinal))) +
geom_bar(position = "stack", width = 0.8, fill='#dabfff') +
labs(title = title,
x = "Month-Year",
y = "Number of Invites",
fill = "Longitudinal") +
theme(panel.background = element_rect(fill="white"),
panel.border=element_rect(color="#3C1939", fill=NA, linewidth=1),
legend.title = element_blank(),
axis.text = element_text(family = 'Arial', size = 10),
axis.title = element_text(family='Arial', size=12),
legend.text = element_text(family='Arial', size=11),
title = element_text(family="Arial", size=14)) +
scale_fill_manual(values = colors)
plot
plot <- ggplot(data, aes(x = invite_month)) +
geom_bar(position = "stack", width = 0.8, fill='#dabfff') +
labs(title = title,
x = "Month-Year",
y = "Number of Invites") +
theme(panel.background = element_rect(fill="white"),
panel.border=element_rect(color="#3C1939", fill=NA, linewidth=1),
legend.title = element_blank(),
axis.text = element_text(family = 'Arial', size = 10),
axis.title = element_text(family='Arial', size=12),
legend.text = element_text(family='Arial', size=11),
title = element_text(family="Arial", size=14)) +
scale_fill_manual(values = colors)
plot
plot <- ggplot(data, aes(x = invite_month)) +
geom_bar(position = "stack", width = 0.8, fill='#dabfff', color='black') +
labs(title = title,
x = "Month-Year",
y = "Number of Invites") +
theme(panel.background = element_rect(fill="white"),
panel.border=element_rect(color="#3C1939", fill=NA, linewidth=1),
legend.title = element_blank(),
axis.text = element_text(family = 'Arial', size = 10),
axis.title = element_text(family='Arial', size=12),
legend.text = element_text(family='Arial', size=11),
title = element_text(family="Arial", size=14)) +
scale_fill_manual(values = colors)
plot
#creating data frame with counts per month
counts <- data.frame(table(data$invite_month)) %>%
rename(total = Freq)
counts <- counts %>%
rename(month = Var1)
View(counts)
max_date = 'none'
timepoint = 30
#creating data frame
age_in = case_when(
timepoint == 6 ~ 142, timepoint == 9 ~ 243, timepoint == 12 ~ 336, timepoint == 18 ~ 504, timepoint == 30 ~ 870, timepoint == 42 ~ 1232
)
all_dobs <- get_child_dob(token)
token = ' D4DF5D2839A15994FCEC02E51B81C609'
#creating data frame
age_in = case_when(
timepoint == 6 ~ 142, timepoint == 9 ~ 243, timepoint == 12 ~ 336, timepoint == 18 ~ 504, timepoint == 30 ~ 870, timepoint == 42 ~ 1232
)
all_dobs <- get_child_dob(token)
longitudinal_participants <- get_all_timepoints(token)
all_dobs <- get_child_dob(token)
max_date = 'none'
timepoint = 30
token = 'D4DF5D2839A15994FCEC02E51B81C609'
library(CopeData)
#creating data frame
age_in = case_when(
timepoint == 6 ~ 142, timepoint == 9 ~ 243, timepoint == 12 ~ 336, timepoint == 18 ~ 504, timepoint == 30 ~ 870, timepoint == 42 ~ 1232
)
all_dobs <- get_child_dob(token)
longitudinal_participants <- get_all_timepoints(token)
longitudinal_participants <- longitudinal_participants %>%
filter(!is.na(infant_6months) | !is.na(infant_12months) | !is.na(infant_30months) | is.na(child_42months)) %>%
select(record_id) %>%
mutate(longitudinal = 'Longitudinal')
all_dobs <- all_dobs %>%
mutate(dob = ifelse(!is.na(child_dob_final) & !is.na(due_date), child_dob_final,
ifelse(is.na(child_dob_final) & !is.na(due_date), due_date, child_dob_final))) %>%
select(record_id, dob) %>%
mutate(expected_invite_date = as.Date((dob + age_in), origin='1970-01-01'),
dob = as.Date(dob, origin='1970-01-01'),
invite_month = format(expected_invite_date, "%b %y")) %>%
arrange(expected_invite_date) %>%
filter(expected_invite_date >= Sys.Date()) %>%
left_join(longitudinal_participants, by='record_id')
all_dobs$longitudinal <- ifelse(is.na(all_dobs$longitudinal), 'Not Longitudinal', all_dobs$longitudinal)
if (!is.na(max_date)) {
max_date = as.Date(max_date, format='%Y-%m-%d')
all_dobs <- all_dobs %>%
filter(expected_invite_date <= max_date)
}
max_date = 'none'
if (!is.na(max_date)) {
max_date = as.Date(max_date, format='%Y-%m-%d')
all_dobs <- all_dobs %>%
filter(expected_invite_date <= max_date)
}
#bar chart
all_dobs$invite_month <- factor(all_dobs$invite_month, levels = unique(all_dobs$invite_month))
if ("Longitudinal" %in% all_dobs$longitudinal && "Not Longitudinal" %in% all_dobs$longitudinal) {
colors <- c('#dabfff', '#907ad6')
} else if ("Longitudinal" %in% all_dobs$longitudinal) {
colors <- '#dabfff'
} else if ("Not Longitudinal" %in% all_dobs$longitudinal) {
colors <- '#907ad6'
} else {
# Handle other cases if needed
}
title = paste0("Future invites by month for ", timepoint, " month timepoint")
plot <- ggplot(all_dobs, aes(x = invite_month, fill = factor(longitudinal))) +
geom_bar(position = "stack", width = 0.8) +
labs(title = title,
x = "Month-Year",
y = "Number of Invites",
fill = "Longitudinal") +
theme(panel.background = element_rect(fill="white"),
panel.border=element_rect(color="#3C1939", fill=NA, linewidth=1),
legend.title = element_blank(),
axis.text = element_text(family = 'Arial', size = 10),
axis.title = element_text(family='Arial', size=12),
legend.text = element_text(family='Arial', size=11),
title = element_text(family="Arial", size=14)) +
scale_fill_manual(values = colors)
plot
#creating data frame with counts per month
counts <- data.frame(table(all_dobs$invite_month)) %>%
rename(total = Freq)
long_counts <- data.frame(table(subset(all_dobs, longitudinal == 'Longitudinal')$invite_month)) %>%
rename(longitudinal = Freq)
non_long_counts <-  data.frame(table(subset(all_dobs, longitudinal == 'Not Longitudinal')$invite_month)) %>%
rename(non_longitudinal = Freq)
counts <- counts %>%
left_join(long_counts, by='Var1') %>%
left_join(non_long_counts, by='Var1') %>%
rename(month = Var1)
if (max_date != 'none') {
max_date = as.Date(max_date, format='%Y-%m-%d')
all_dobs <- all_dobs %>%
filter(expected_invite_date <= max_date)
}
max_date = 'none'
if (max_date != 'none') {
max_date = as.Date(max_date, format='%Y-%m-%d')
all_dobs <- all_dobs %>%
filter(expected_invite_date <= max_date)
}
timepoint = '8m'
token <- '25120FD84FFDA3B220617BDF23B680CD'
get_expected_invites <- function(token, timepoint = '4m', study = 'orca') {
age_in <- case_when(
timepoint == '4m' ~ 107,
timepoint == '8m' ~ 228,
timepoint == '12m' ~  350,
timepoint == 'newborn' ~ 7,
timepoint == 'prenatal' ~ -84
)
#SCREENER PROJECT DEPENDENT - prenatal, peach, 4m
#ORCA PROJECT DEPENDENT - 8m, 12m
if (timepoint == 'prenatal' | timepoint == 'newborn') {
screener_cohort <- get_orca_cohort(token, screener=T)
due_date <- get_orca_field(token, field='rec_due_date')
data <- screener_cohort %>%
left_join(due_date, by='record_id') %>%
select(record_id, rec_due_date) %>%
filter(!is.na(rec_due_date))
data <- data %>%
mutate(exp_invite_date = rec_due_date -84,
invite_month = format(exp_invite_date, "%b %y")) %>%
filter(exp_invite_date > Sys.Date())
} else if (timepoint == 'newborn') {
screener_cohort <- get_orca_cohort(token, screener=T)
due_date <- get_orca_field(token, field='rec_due_date')
prenatal <- screener_cohort %>%
left_join(due_date, by='record_id') %>%
select(record_id, rec_due_date) %>%
filter(!is.na(rec_due_date))
prenatal <- prenatal %>%
mutate(exp_invite_date = rec_due_date + age_in) %>%
filter(exp_invite_date > Sys.Date())
data <- get_orca_data(token, form='contact_log', form_complete = F) %>%
filter(orca_study_enrollment___5 == 1) %>%
select(record_id)
data <- data %>%
left_join(prenatal, by="record_id")
data <- data %>%
mutate(invite_month = format(exp_invite_date, "%b %y"))
} else if (timepoint == '4m') {
screener_cohort <- get_orca_cohort(token, screener=T)
child_dob <- get_screener_child_dob(token)
child_dob <- child_dob %>%
select(record_id, final_dob)
data <- screener_cohort %>%
left_join(child_dob, by='record_id') %>%
filter(orca == 1) %>%
select(record_id, final_dob)
data$exp_invite_date = data$final_dob + 107
data <- data %>%
filter(exp_invite_date > Sys.Date()) %>%
mutate(invite_month = format(exp_invite_date, "%b %y"))
} else if (timepoint == '8m' | timepoint == '12m') {
orca_cohort <- get_orca_cohort(token) %>%
select(record_id)
dob <- get_orca_field(token, field='child_dob') %>%
select(-redcap_event_name)
data <- orca_cohort %>%
left_join(dob, by='record_id')
data <- data %>%
mutate(exp_invite_date = child_dob + age_in,
invite_month = format(exp_invite_date, "%b %y")) %>%
select(-child_dob) %>%
filter(exp_invite_date > Sys.Date())
}
if (max_date != 'none') {
max_date = as.Date(max_date, format='%Y-%m-%d')
data <- data %>%
filter(exp_invite_date <= max_date)
}
#GRAPH
data$invite_month <- factor(data$invite_month, levels = unique(data$invite_month))
colors <- '#dabfff'
title = paste0("Future invites by month for ", timepoint, " timepoint")
plot <- ggplot(data, aes(x = invite_month)) +
geom_bar(position = "stack", width = 0.8, fill='#dabfff', color='black') +
labs(title = title,
x = "Month-Year",
y = "Number of Invites") +
theme(panel.background = element_rect(fill="white"),
panel.border=element_rect(color="#3C1939", fill=NA, linewidth=1),
legend.title = element_blank(),
axis.text = element_text(family = 'Arial', size = 10),
axis.title = element_text(family='Arial', size=12),
legend.text = element_text(family='Arial', size=11),
title = element_text(family="Arial", size=14)) +
scale_fill_manual(values = colors)
plot
#creating data frame with counts per month
counts <- data.frame(table(data$invite_month)) %>%
rename(total = Freq)
counts <- counts %>%
rename(month = Var1)
result <- list(data = data, plot = plot, counts = counts)
return(result)
}
token <- '25120FD84FFDA3B220617BDF23B680CD'
get_expected_invites <- function(token, timepoint = '4m', max_date = 'none') {
age_in <- case_when(
timepoint == '4m' ~ 107,
timepoint == '8m' ~ 228,
timepoint == '12m' ~  350,
timepoint == 'newborn' ~ 7,
timepoint == 'prenatal' ~ -84
)
#SCREENER PROJECT DEPENDENT - prenatal, peach, 4m
#ORCA PROJECT DEPENDENT - 8m, 12m
if (timepoint == 'prenatal' | timepoint == 'newborn') {
screener_cohort <- get_orca_cohort(token, screener=T)
due_date <- get_orca_field(token, field='rec_due_date')
data <- screener_cohort %>%
left_join(due_date, by='record_id') %>%
select(record_id, rec_due_date) %>%
filter(!is.na(rec_due_date))
data <- data %>%
mutate(exp_invite_date = rec_due_date -84,
invite_month = format(exp_invite_date, "%b %y")) %>%
filter(exp_invite_date > Sys.Date())
} else if (timepoint == 'newborn') {
screener_cohort <- get_orca_cohort(token, screener=T)
due_date <- get_orca_field(token, field='rec_due_date')
prenatal <- screener_cohort %>%
left_join(due_date, by='record_id') %>%
select(record_id, rec_due_date) %>%
filter(!is.na(rec_due_date))
prenatal <- prenatal %>%
mutate(exp_invite_date = rec_due_date + age_in) %>%
filter(exp_invite_date > Sys.Date())
data <- get_orca_data(token, form='contact_log', form_complete = F) %>%
filter(orca_study_enrollment___5 == 1) %>%
select(record_id)
data <- data %>%
left_join(prenatal, by="record_id")
data <- data %>%
mutate(invite_month = format(exp_invite_date, "%b %y"))
} else if (timepoint == '4m') {
screener_cohort <- get_orca_cohort(token, screener=T)
child_dob <- get_screener_child_dob(token)
child_dob <- child_dob %>%
select(record_id, final_dob)
data <- screener_cohort %>%
left_join(child_dob, by='record_id') %>%
filter(orca == 1) %>%
select(record_id, final_dob)
data$exp_invite_date = data$final_dob + 107
data <- data %>%
filter(exp_invite_date > Sys.Date()) %>%
mutate(invite_month = format(exp_invite_date, "%b %y"))
} else if (timepoint == '8m' | timepoint == '12m') {
orca_cohort <- get_orca_cohort(token) %>%
select(record_id)
dob <- get_orca_field(token, field='child_dob') %>%
select(-redcap_event_name)
data <- orca_cohort %>%
left_join(dob, by='record_id')
data <- data %>%
mutate(exp_invite_date = child_dob + age_in,
invite_month = format(exp_invite_date, "%b %y")) %>%
select(-child_dob) %>%
filter(exp_invite_date > Sys.Date())
}
if (max_date != 'none') {
max_date = as.Date(max_date, format='%Y-%m-%d')
data <- data %>%
filter(exp_invite_date <= max_date)
}
#GRAPH
data$invite_month <- factor(data$invite_month, levels = unique(data$invite_month))
colors <- '#dabfff'
title = paste0("Future invites by month for ", timepoint, " timepoint")
plot <- ggplot(data, aes(x = invite_month)) +
geom_bar(position = "stack", width = 0.8, fill='#dabfff', color='black') +
labs(title = title,
x = "Month-Year",
y = "Number of Invites") +
theme(panel.background = element_rect(fill="white"),
panel.border=element_rect(color="#3C1939", fill=NA, linewidth=1),
legend.title = element_blank(),
axis.text = element_text(family = 'Arial', size = 10),
axis.title = element_text(family='Arial', size=12),
legend.text = element_text(family='Arial', size=11),
title = element_text(family="Arial", size=14)) +
scale_fill_manual(values = colors)
plot
#creating data frame with counts per month
counts <- data.frame(table(data$invite_month)) %>%
rename(total = Freq)
counts <- counts %>%
rename(month = Var1)
result <- list(data = data, plot = plot, counts = counts)
return(result)
}
#timepoints to include in this:
#prenatal, peach, 4m, 8m, 12m
#study = orca or mice
x <- get_expected_invites(token, timepoint='8m')
View(x)
token <- '950056F36783568FBA0900EFAE8AA4A4'
#timepoints to include in this:
#prenatal, peach, 4m, 8m, 12m
#study = orca or mice
x <- get_expected_invites(token, timepoint='4m')
x$plot
setwd("/Users/amyhume/CopeData")
roxygen2::roxygenise()
setwd("/Users/amyhume/OrcaData2")
roxygen2::roxygenise()
remove.packages('OrcaData2')
devtools::install_github("amyhume/OrcaData2")
library(tidyverse)
library(OrcaData2)
