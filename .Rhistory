df[df == 9999] = NA # NOTE values can be changed, or new ones added, to account for different missing data flags
return (df)
}
dq <- get_orca_data2(token, form="data_quality_visit_1", form_complete = F)
url <- 'https://redcap.nyu.edu/api/'
dq <- get_orca_data2(token, form="data_quality_visit_1", form_complete = F)
View(dq)
test_ids <- dq$record_id
View(dq)
library(tidyverse)
test_ids <- test_ids[str_detect(test_ids, 'TEST')]
print(test_ids)
ids <- c('049', '050', '099')
dq <- dq %>%
filter(str_detect(record_id, any(ids)))
dq <- dq %>%
filter(record_id %in% ids)
View(dq)
dq <- get_orca_data2(token, form="data_quality_visit_1", form_complete = F)
dq <- dq %>%
filter(str_detect(record_id, paste(ids, collapse = '|')))
View(dq)
ah <- dq %>%
filter(record_id %in% ids)
ng <- dq %>%
filter(str_detect(record_id, "NG"))
View(ng)
View(ah)
ah <- dq %>%
filter(record_id %in% ids) %>%
filter(redcap_event_name == 'orca_visit_1_arm_1')
View(ah)
ly <- dq %>%
filter(str_detect(record_id, "LY"))
sa <- dq %>%
filter(str_detect(record_id, "SA"))
ah <- dq %>%
filter(record_id %in% ids) %>%
filter(redcap_event_name == 'orca_visit_1_arm_1') %>%
select(record_id, cecile_dq_notes, vpc_dq_score, memory_dq_score, maap_dq_score)
ng <- dq %>%
filter(str_detect(record_id, "NG")) %>%
select(record_id, cecile_dq_notes, vpc_dq_score, memory_dq_score, maap_dq_score)
ah <- dq %>%
filter(record_id %in% ids) %>%
filter(redcap_event_name == 'orca_visit_1_arm_1') %>%
select(record_id, cecile_dq_score, vpc_dq_score, memory_dq_score, maap_dq_score)
ng <- dq %>%
filter(str_detect(record_id, "NG")) %>%
select(record_id, cecile_dq_score, vpc_dq_score, memory_dq_score, maap_dq_score)
ng$record_id <- gsub("TEST_", "", ng$record_id)
ng$record_id <- gsub("_NG", "", ng$record_id)
View(ng)
ah_ng <- ah %>%
left_join(ng, by="record_id")
View(ah_ng)
library(CopeData)
token <- 'D4DF5D2839A15994FCEC02E51B81C609'
library(tidyverse)
notes_42m <- get_data(token, form = 'm_home_visit_notes')
View(notes_42m)
notes_42m <- notes_42m %>%
select(record_id, fnirs_cg_so_42m, fnirs_child_so_42m, fnirs_notes_42m)
View(notes_42m)
notes_42m <- notes_42m %>%
select(record_id, fnirs_cg_so_42m, fnirs_child_so_42m, fnirs_notes_42m) %>%
filter(fnirs_cg_so_42m == 4 | fnirs_child_so_42m == 4)
library(tidyverse)
setwd("/Users/amyhume/Documents/ORCA")
invites <- read.csv("prenatal_invites.csv", na.strings = "")
View(invites)
consents <- nrow(subset(invites, Responded. == "Yes"))
invites <- invites %>%
rename(record_id = Record, invitation_sent = Invitation.send.time) %>%
select(record_id, invitation_sent)
library(OrcaData2)
token <- '950056F36783568FBA0900EFAE8AA4A4'
due_dates <- get_orca_field(token, field = "rec_due_date")
View(due_dates)
due_date$days_to_birth <- difftime(Sys.Date(), due_dates$rec_due_date, units = "days")
due_dates$days_to_birth <- difftime(Sys.Date(), due_dates$rec_due_date, units = "days")
View(due_dates)
due_dates$days_to_birth <- difftime(due_dates$rec_due_date,Sys.Date(), units = "days")
View(due_dates)
due_dates$days_to_birth <- as.numeric(difftime(due_dates$rec_due_date,Sys.Date(), units = "days"))
invites <- invites %>%
left_join(due_dates, by="record_id")
View(invites)
invites_2 <- read.csv("prenatal_invites.csv", na.strings = "")
invites <- read.csv("prenatal_invites.csv", na.strings = "")
invites_total <- invites %>%
rename(record_id = Record, invitation_sent = Invitation.send.time) %>%
select(record_id, invitation_sent)
invites_total <- invites_total %>%
left_join(due_dates, by="record_id")
non_responders <- invites %>%
filter(Responded. == "No")
View(non_responders)
library(OrcaData2)
library(tidyverse)
token <- '25120FD84FFDA3B220617BDF23B680CD'
demo <- get_orca_data(token, form="sociodemographic")
View(demo)
data <- demo
if (str_detect(data$child_birth_weight, ",")) {
data <- data %>%
mutate(new_column1 = str_split(child_birth_weight, ","),
new_column2 = str_split(child_birth_weight, ",")
}
if (str_detect(data$child_birth_weight, ",")) {
data <- data %>%
mutate(new_column1 = str_split(child_birth_weight, ","),
new_column2 = str_split(child_birth_weight, ",")
}
if (str_detect(data$child_birth_weight, ",")) {
data <- data %>%
mutate(new_column1 = str_split(child_birth_weight, ","),
new_column2 = str_split(child_birth_weight, ","))
}
if (str_detect(data$child_birth_weight, ",")) {
data <- data %>%
mutate(new_column1 = str_split(child_birth_weight, ","),
new_column2 = str_split(child_birth_weight, ","))
} else {
data <- data %>%
mutate(new_column1 = str_split(child_birth_weight, " "),
new_column2 = str_split(child_birth_weight, " "))
}
split_columns <- stringr::str_split(data$child_birth_weight[1], ",")
View(split_columns)
split_columns <- as.character(stringr::str_split(data$child_birth_weight[1], ","))
split_columns <- stringr::str_split(data$child_birth_weight[1], ",")[1]
View(split_columns)
data$child_bw_ib <- split_columns[1][1]
View(data)
data$child_bw_ib[1] <- split_columns[1][1]
split_columns <- stringr::strsplit(data$child_birth_weight[1], ",")
split_columns <- strsplit(data$child_birth_weight[1], ",")
View(split_columns)
View(data)
if (str_detect(data$child_birth_weight[row], ",")) {
data <- separate(data, child_birth_weight[row], into = c("child_birth_ib"[row], "child_birth_oz"[row]), sep = ",")
} else {
data <- separate(data, child_birth_weight[row], into = c("child_birth_ib"[row], "child_birth_oz"[row]), sep = " ")
}
sep = ifelse(str_detect(data$child_birth_weight[1], ","), ",", " ")
sep = ifelse(str_detect(data$child_birth_weight[3], ","), ",", " ")
sep = ifelse(str_detect(data$child_birth_weight[6], ","), ",", " ")
for (row in 1:nrow(data)) {
data$sep[row] = ifelse(str_detect(data$child_birth_weight[row], ","), ",", " ")
}
View(data)
data <- data %>%
separate(child_birth_weight, into = c("child_birth_ib", "child_birth_oz"), sep = sep)
data <- data %>%
separate(child_birth_weight, into = c("child_birth_ib", "child_birth_oz"), sep = sep)
data <- demo
for (row in 1:nrow(data)) {
data$sep_string[row] = ifelse(str_detect(data$child_birth_weight[row], ","), ",", " ")
}
View(data)
data <- data %>%
separate(child_birth_weight, into = c("child_birth_ib", "child_birth_oz"), sep = sep_string)
data <- data %>%
separate(child_birth_weight, into = c("child_birth_ib", "child_birth_oz"), sep = sep_string)
View(data)
for (row in 1:nrow(data)) {
if (str_detect(data$child_birth_weight[row], " ") & !str_detect(data$child_birth_weight[row], ",")) {
data$child_birth_weight[row] <- gsub(" ", ",", data$child_birth_weight[row])
}
}
View(data)
data <- data %>%
separate(child_birth_weight, into = c("child_birth_ib", "child_birth_oz"), sep = ",")
View(data)
data <- demo
for (row in 1:nrow(data)) {
if (str_detect(data$child_birth_weight[row], " ") & !str_detect(data$child_birth_weight[row], ",")) {
data$child_birth_weight[row] <- gsub(" ", ",", data$child_birth_weight[row])
}
}
data <- data %>%
separate(child_birth_weight, into = c("child_birth_ib", "child_birth_oz"), sep = ",", remove = F)
View(data)
data$child_birth_oz <- as.numeric(data$child_birth_oz)
data$child_birth_ib <- as.numeric(data$child_birth_ib)
data$child_birth_oz <- as.numeric(data$child_birth_oz)
View(data)
for (row in 1:nrow(data)) {
if (str_detect(data$child_birth_weight[row], " ") & !str_detect(data$child_birth_weight[row], ",")) {
data$child_birth_weight[row] <- gsub(" ", ",", data$child_birth_weight[row])
}
}
data <- data %>%
separate(child_birth_weight, into = c("child_birth_ib", "child_birth_oz"), sep = ",", remove = F)
View(data)
data <- data %>%
mutate(child_birth_ib = parse_number(child_birth_ib),
child_birth_oz = parse_number(child_birth_oz))
View(data)
char_variable = "7ib8oz"
non_numeric <- grepl("[^0-9]", char_variable)
non_numeric_chars <- gsub("[0-9]", "", char_variable)
char_variable <- gsub(non_numeric_chars, ",", char_variable)
char_variable <- gsub("[a-zA-Z]", ",", char_variable)
char_variable = "7ib8oz"
char_variable <- gsub("[A-Z]", ",", char_variable)
char_variable <- gsub("[a-z][A-Z]", ",", char_variable)
char_variable <- gsub("[a-zA-Z]", ",", char_variable)
char_variable <- data.frame(char_variable)
View(char_variable)
char_variable <- char_variable %>%
separate(char_variable, into=c("a", "b"), sep = ",")
View(data)
View(char_variable)
char_variable = "7ib8oz"
char_variable <- gsub("[a-z]", ",", char_variable)
char_variable = "7ib8oz"
char_variable <- gsub("[a-zA-Z]+", ",",, char_variable)
char_variable <- gsub("[a-zA-Z]+", ",", char_variable)
char_variable <- char_variable %>%
separate(char_variable, into=c("a", "b"), sep = ",")
char_variable <- data.frame(char_variable)
char_variable <- char_variable %>%
separate(char_variable, into=c("a", "b"), sep = ",")
View(char_variable)
na_values <- count(subset(is.na(data$child_birth_ib)))
na_values <- sum(is.na(data$child_birth_ib))
na_values <- sum(is.na(data$redcap_survey_identifier))
clean_birthweight <- function(data) {
for (row in 1:nrow(data)) {
if (str_detect(data$child_birth_weight[row], " ") & !str_detect(data$child_birth_weight[row], ",")) {
data$child_birth_weight[row] <- gsub(" ", ",", data$child_birth_weight[row])
} else {
data$child_birth_weight[row] <- gsub("[a-zA-Z]+", ",", data$child_birth_weight[row])
}
}
data <- data %>%
separate(child_birth_weight, into = c("child_birth_ib", "child_birth_oz"), sep = ",", remove = F)
data <- data %>%
mutate(child_birth_ib = parse_number(child_birth_ib),
child_birth_oz = parse_number(child_birth_oz))
na_values <- sum(is.na(data$child_birth_ib))
if (sum(is.na(data$child_birth_ib)) == sum(is.na(data$child_birth_weight))) {
data <- dplyr::select(data, -child_birth_weight)
return(data)
} else {
print("there may be an error with child_birth_weight column - check formatting and try again")
}
}
demo <- get_orca_data(token, form="sociodemographic")
demo2 <- clean_birthweight(demo)
View(demo2)
token <- '2338CA1AE27CE6932A075CF7B7931827'
library(OrcaData)
detach("package:OrcaData2", unload = TRUE)
library(OrcaData)
current_ages <- get_orca_data(token, form = 'sociodemographic')
View(current_ages)
current_ages <- get_orca_field(token, field = "child_dob")
View(current_ages)
current_ages$current_age_days = difftime(current_ages$child_dob, Sys.Date(), units = "days")
View(current_ages)
current_ages$current_age_days = as.numeric(difftime(Sys.Date(), current_ages$child_dob,units = "days"))
View(current_ages)
current_ages$current_age_weeks <- current_ages$current_age_days/4.345
View(current_ages)
current_ages$current_age_weeks = as.numeric(difftime(Sys.Date(), current_ages$child_dob,units = "weeks"))
current_ages <- get_orca_field(token, field = "child_dob")
current_ages$current_age_weeks = as.numeric(difftime(Sys.Date(), current_ages$child_dob,units = "weeks"))
current_ages$current_age_months <- current_ages$current_age_weeks/4.345
View(current_ages)
current_ages$current_age_days = as.numeric(difftime(Sys.Date(), current_ages$child_dob,units = "days"))
current_ages$current_age_months2 <- current_ages$current_age_days/30.44
View(current_ages)
current_ages <- current_ages %>%
select(record_id, current_age_months)
current_ages <- get_orca_field(token, field = "child_dob")
current_ages$current_age_weeks = as.numeric(difftime(Sys.Date(), current_ages$child_dob,units = "weeks"))
current_ages$current_age_months <- current_ages$current_age_weeks/4.345
current_ages <- current_ages %>%
select(record_id, child_dob,current_age_months)
View(current_ages)
write_csv(current_ages, "orca_current_ages.csv", na="")
setwd("/Users/amyhume")
write_csv(current_ages, "orca_current_ages.csv", na="")
detach("package:OrcaData", unload = TRUE)
library(OrcaData2)
library(tidyverse)
token <- '25120FD84FFDA3B220617BDF23B680CD'
demo <- get_orca_data(token, form="sociodemographic")
setwd("/Users/amyhume")
data <- read.csv("orca_current_ages.csv", na.strings="")
library(OrcaData)
detach("package:OrcaData2", unload = TRUE)
library(OrcaData)
token <- '2338CA1AE27CE6932A075CF7B7931827'
age <- get_orca_field(token, field = "child_age")
age <- get_orca_field(token, field = "child_visit_age")
View(age)
View(data)
age$record_id <- as.numeric(age$record_id)
View(age)
data <- data %>%
left_join(age, by="record_id")
data <- data %>%
rename(age_at_visit = child_visit_age)
age2 <- get_orca_field(token, field = "child_visit_age_2")
View(age2)
age2$record_id <- as.numeric(age2$record_id)
data <- data %>%
left_join(age2, by="record_id")
View(data)
View(data)
data <- data %>%
rename(age_at_visit_2 = child_visit_age_2) %>%
select(record_id, child_dob, current_age_months, age_at_visit, age_at_visit_2)
View(data)
write_csv(data, "orca_current_ages.csv", na="")
detach("package:OrcaData", unload = TRUE)
library(OrcaData2)
library(tidyverse)
token <- '25120FD84FFDA3B220617BDF23B680CD'
demo <- get_orca_data(token, form="sociodemographic")
View(demo)
#Functions for get_orca_demo
#cleans birthweight answers and splits them into ib and oz
clean_birthweight <- function(data) {
data$child_birth_weight <- tolower(data$child_birth_weight)
for (row in 1:nrow(data)) {
if (str_detect(data$child_birth_weight[row], "lbs")) {
data$child_birth_weight[row] <- gsub("lbs", ",", data$child_birth_weight[row])
} else if (str_detect(data$child_birth_weight[row], " ") & !str_detect(data$child_birth_weight[row], ",")) {
data$child_birth_weight[row] <- gsub(" ", ",", data$child_birth_weight[row])
}
}
data <- data %>%
separate(child_birth_weight, into = c("child_birth_lb", "child_birth_oz"), sep = ",", remove = F)
data <- data %>%
mutate(child_birth_lb = parse_number(child_birth_lb),
child_birth_oz = parse_number(child_birth_oz))
na_values <- sum(is.na(data$child_birth_lb))
if (sum(is.na(data$child_birth_lb)) == sum(is.na(data$child_birth_weight))) {
data <- dplyr::select(data, -child_birth_weight)
return(data)
} else {
print("there may be an error with child_birth_weight column - check formatting and try again")
}
}
library(OrcaData2)
library(tidyverse)
token <- '25120FD84FFDA3B220617BDF23B680CD'
demo <- get_orca_data(token, form="sociodemographic")
child_age <- get_orca_field(token, field = 'child_age_4m')
demo <- clean_birthweight(demo)
demo <- demo %>%
select(record_id, socio_date, child_dob, child_sex, child_race, child_race_perception, gestation,
child_birth_lb, child_birth_oz, parent_dob, caregiver_age, caregiver_gender, relationship_child, relationship_child_other,
caregiver_ed, annual_income, zip_code, adults_home, children_home, marital_status, marital_status_other, caregiver_race, caregiver_race_perception,
rooms_living)
#recoding child sex
demo$child_sex <- gsub("1", "Male", demo$child_sex)
demo$child_sex <- gsub("2", "Female", demo$child_sex)
demo <- demo %>%
mutate(caregiver_gender = case_when(
caregiver_gender == 1 ~ 'Male',
caregiver_gender == 2 ~ 'Female',
caregiver_gender == 3 ~ 'Other',
caregiver_gender == 999 ~ 'Decline'
))
#calculating age
demo <- demo %>%
left_join(child_age, by="record_id")
#RACE
demo$child_race <- tolower(demo$child_race)
demo$child_race_perception <- tolower(demo$child_race_perception)
demo$caregiver_race <- tolower(demo$caregiver_race)
demo <- demo %>%
mutate(child_race_cat = ifelse(str_detect(child_race, 'black') | str_detect(child_race, 'african american') | str_detect(child_race, 'african-american'), 'black/african american',
ifelse(str_detect(child_race, 'caucasian') | str_detect(child_race, 'white'), 'white',
ifelse(str_detect(child_race, 'hispan') | str_detect(child_race, 'latin'), 'hispanic/latino', child_race))))
demo <- demo %>%
mutate(caregiver_race_cat = ifelse(str_detect(caregiver_race, 'black') | str_detect(caregiver_race, 'african american') | str_detect(caregiver_race, 'african-american'), 'black/african american',
ifelse(str_detect(caregiver_race, 'caucasian') | str_detect(caregiver_race, 'white'), 'white',
ifelse(str_detect(caregiver_race, 'hispan') | str_detect(caregiver_race, 'latin'), 'hispanic/latino', caregiver_race))))
View(demo)
poverty_guidelines <- data.frame(
household_n = c(1,2,3,4,5,6,7,8),
income_threshold = c(15060,20440,25820,31200,36580,41960,47340,52720)
)
View(poverty_guidelines)
str(poverty_guidelines$household_n)
row <- 1
total_household = (data$children_home[row] + data$adults_home[row])
data <- demo
total_household = (data$children_home[row] + data$adults_home[row])
str(total_household)
if (total_household == poverty_guidelines$household_n[1]) {
amount <- poverty_guidelines$income_threshold[x]
} else {
print('no')
}
if (total_household == poverty_guidelines$household_n[2]) {
amount <- poverty_guidelines$income_threshold[x]
} else {
print('no')
}
if (total_household == poverty_guidelines$household_n[3]) {
amount <- poverty_guidelines$income_threshold[x]
} else {
print('no')
}
if (total_household == poverty_guidelines$household_n[3]) {
amount <- poverty_guidelines$income_threshold[3]
} else {
print('no')
}
index <- which(poverty_guidelines$household_n == total_household)
threshold = poverty_guidelines$income_threshold[index]
for (row in 1:nrow(data)) {
total_household = (data$children_home[row] + data$adults_home[row])
index <- which(poverty_guidelines$household_n == total_household)
threshold = poverty_guidelines$income_threshold[index]
data$itn[row] <- data$annual_income[row] / threshold
}
View(data)
for (row in 1:nrow(data)) {
#creating poverty guideline data base (2024)
poverty_guidelines <- data.frame(
household_n = c(1,2,3,4,5,6,7,8),
income_threshold = c(15060,20440,25820,31200,36580,41960,47340,52720)
)
total_household = (data$children_home[row] + data$adults_home[row])
index <- which(poverty_guidelines$household_n == total_household)
threshold = poverty_guidelines$income_threshold[index]
data$itn[row] <- data$annual_income[row] / threshold
}
calculate_itn <- function(data) {
total_household = (data$children_home[row] + data$adults_home[row])
if (total_household <= 8) {
index <- which(poverty_guidelines$household_n == total_household)
} else {
index = 8
}
threshold = poverty_guidelines$income_threshold[index]
data$itn[row] <- data$annual_income[row] / threshold
return(data)
}
View(demo)
#calculating ITN
demo <- calculate_itn(demo)
View(demo)
calculate_itn <- function(data) {
#creating poverty guideline data base (2024)
poverty_guidelines <- data.frame(
household_n = c(1,2,3,4,5,6,7,8),
income_threshold = c(15060,20440,25820,31200,36580,41960,47340,52720)
)
for (row in 1:nrow(data)) {
total_household = (data$children_home[row] + data$adults_home[row])
if (total_household <= 8) {
index <- which(poverty_guidelines$household_n == total_household)
} else {
index = 8
}
threshold = poverty_guidelines$income_threshold[index]
data$itn[row] <- data$annual_income[row] / threshold
}
return(data)
}
#calculating ITN
demo <- calculate_itn(demo)
View(demo)
#making a race graph
race_counts <- table(demo$caregiver_race)
table(demo$caregiver_race)
#making a race graph
race_counts <- data.frame(table(demo$caregiver_race))
View(race_counts)
#making a race graph
race_counts <- data.frame(table(demo$caregiver_race_cat))
View(race_counts)
race_counts <- race_counts %>%
rename(race = Var1, count = Freq)
#making a race graph
race_counts <- data.frame(table(demo$caregiver_race_cat))
sum(race_counts$Freq)
race_counts <- race_counts %>%
rename(race = Var1, count = Freq) %>%
mutate(percent = count / sum(race_counts$Freq) *100)
View(race_counts)
race_graph <- race_counts %>%
ggplot(aes(x=race, y=percent, fill=race)) +
geom_bar(stat = "identity")
race_graph
race_graph <- race_counts %>%
ggplot(aes(x=race, y=percent, fill=race)) +
geom_bar(stat = "identity") +
theme(panel.border=element_rect(color="black", size=1, fill=NA),
panel.background = element_rect(fill="white"),
plot.background = element_rect(fill="white"))
race_graph
race_graph <- race_counts %>%
ggplot(aes(x=race, y=percent, fill=race)) +
geom_bar(stat = "identity") +
theme(panel.border=element_rect(color="black", size=1, fill=NA),
panel.background = element_rect(fill="white"),
plot.background = element_rect(fill="white")) +
labs(x = "Caregiver Race", y="Percent")
race_graph
setwd("/Users/amyhume/OrcaData2")
roxygen2::roxygenise()
