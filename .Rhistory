rawOrLabelHeaders='raw',
exportCheckboxLabel='false',
exportSurveyFields='false',
exportDataAccessGroups='false',
returnFormat='json'
)
response <- httr::POST(url, body = formData, encode = "form")
result <- httr::content(response)
response
result
View(result)
token <- "25120FD84FFDA3B220617BDF23B680CD"
url <- "https://redcap.nyu.edu/api/"
formData <- list("token"=token,
content='record',
action='export',
format='csv',
type='flat',
csvDelimiter='',
'fields[0]'='record_id',
'forms[0]'='mice_visit_notes_4m',
'events[0]'='mice_4month_arm_4',
rawOrLabel='raw',
rawOrLabelHeaders='raw',
exportCheckboxLabel='false',
exportSurveyFields='false',
exportDataAccessGroups='false',
returnFormat='json'
)
response <- httr::POST(url, body = formData, encode = "form")
result <- httr::content(response)
print(result)
View(result)
token <- "25120FD84FFDA3B220617BDF23B680CD"
url <- "https://redcap.nyu.edu/api/"
formData <- list("token"=token,
content='record',
action='export',
format='csv',
type='eav',
csvDelimiter='',
'fields[0]'='record_id',
'forms[0]'='mice_visit_notes_4m',
rawOrLabel='raw',
rawOrLabelHeaders='raw',
exportCheckboxLabel='false',
exportSurveyFields='false',
exportDataAccessGroups='false',
returnFormat='json'
)
response <- httr::POST(url, body = formData, encode = "form")
result <- httr::content(response)
View(result)
repeat_check <- httr::POST(url, body = list(
token = token,
content = 'repeatingFormsEvents',
format = 'json'
), encode = "form")
httr::content(repeat_check)
eav_data <- httr::POST(url, body = list(
token = token,
content = 'record',
action = 'export',
format = 'csv',
type = 'eav',
rawOrLabel = 'raw',
rawOrLabelHeaders = 'raw',
returnFormat = 'json'
), encode = "form") |> httr::content()
eav_data[["redcap_repeat_instrument"]] == "mice_visit_notes_4m"
View(eav_data)
visit_notes_4m <- get_orca_data(orca_token, form='participant_information', form_complete = F)
problems(visit_notes_4m)
View(visit_notes_4m)
visit_notes_4m <- get_orca_data(orca_token, form='mice_visit_notes_4m', form_complete = F)
problems(visit_notes_4m)
View(visit_notes_4m)
x = get_orca_data(token, form='mailing_information_4m', form_complete = T)
View(x)
x = get_orca_data(token, form='mailing_information_4m', form_complete = F) %>%
filter(redcap_event_name=='mice_4month_arm_4')
x = get_orca_data(token, form='mice_visit_notes_4m', form_complete = F) %>%
filter(redcap_event_name=='mice_4month_arm_4')
x = get_orca_data(token, form='mice_visit_notes_4m', form_complete = T) %>%
filter(redcap_event_name=='mice_4month_arm_4')
x = get_orca_data(token, form='mice_visit_notes_4m', form_complete = F) %>%
filter(redcap_event_name=='mice_4month_arm_4')
x = get_orca_data(token, form='mice_visit_notes_4m', form_complete = T) %>%
filter(redcap_event_name=='mice_4month_arm_4')
View(visit_notes_4m)
formData <- list("token"=token,
content='record',
action='export',
format='csv',
type='flat',
csvDelimiter='',
'fields[0]'='record_id',
'forms[0]'='mice_visit_notes_4m',
rawOrLabel='raw',
rawOrLabelHeaders='raw',
exportCheckboxLabel='false',
exportSurveyFields='true',
exportDataAccessGroups='false',
returnFormat='json',
filterLogic = "[mc_visit_notes_4m_timestamp] <> ''"
)
response <- httr::POST(url, body = formData, encode = "form")
result <- httr::content(response)
formData <- list("token"=token,
content='record',
action='export',
format='csv',
type='flat',
csvDelimiter='',
'fields[0]'='record_id',
'forms[0]'='mice_visit_notes_4m',
rawOrLabel='raw',
rawOrLabelHeaders='raw',
exportCheckboxLabel='false',
exportSurveyFields='true',
exportDataAccessGroups='false',
returnFormat='json',
filterLogic = "[mc_visit_notes_4m_timestamp] != ''"
)
response <- httr::POST(url, body = formData, encode = "form")
result <- httr::content(response)
formData <- list("token"=token,
content='record',
action='export',
format='csv',
type='flat',
csvDelimiter='',
'fields[0]'='record_id',
'forms[0]'='mice_visit_notes_4m',
rawOrLabel='raw',
rawOrLabelHeaders='raw',
exportCheckboxLabel='false',
exportSurveyFields='true',
exportDataAccessGroups='false',
returnFormat='json',
#filterLogic = "[mc_visit_notes_4m_timestamp] != ''"
)
formData <- list("token"=token,
content='record',
action='export',
format='csv',
type='flat',
csvDelimiter='',
'fields[0]'='record_id',
'forms[0]'='mice_visit_notes_4m',
rawOrLabel='raw',
rawOrLabelHeaders='raw',
exportCheckboxLabel='false',
exportSurveyFields='true',
exportDataAccessGroups='false',
returnFormat='json'
#filterLogic = "[mc_visit_notes_4m_timestamp] != ''"
)
response <- httr::POST(url, body = formData, encode = "form")
result <- httr::content(response)
View(result)
get_orca_data <- function(token = token, form = form, raw_v_label = 'raw', form_complete = T) {
if (form_complete) {
record_filter = paste("[", form, "_complete]=2", sep = "")
} else {
record_filter = paste("[", form, "_complete]=0", sep = "")
}
formData <- list(uri = url,
"token"=token,
content='record',
format='csv',
type='flat',
csvDelimiter='',
'fields[0]'='record_id',
'forms[0]'=form,
rawOrLabel=raw_v_label,
rawOrLabelHeaders=raw_v_label,
exportCheckboxLabel='false',
exportSurveyFields='true',
exportDataAccessGroups='false',
returnFormat='csv',
filterLogic=record_filter)
response <- httr::POST(url, body = formData, encode = "form")
df <- httr::content(response)
if (nrow(df) >= 1) {
df <- dplyr::filter(df, !stringr::str_detect(record_id, "TEST"))
df <- dplyr::filter(df, !stringr::str_detect(record_id, "test"))
df <- dplyr::filter(df, !stringr::str_detect(record_id, "IRB"))
df <- dplyr::filter(df, !stringr::str_detect(record_id, "D"))
df <- dplyr::filter(df, record_id != '496' & record_id != '497' & record_id != '498' & record_id != '499')
} else {
print('no data returned - may need to set form_complete = F')
}
return (df)
}
x = get_orca_data(token, form='mice_visit_notes_4m', form_complete = F)
View(x)
record_filter = paste("[", form, "_complete] <> ''", sep = "")
get_orca_data <- function(token = token, form = form, raw_v_label = 'raw', form_complete = T) {
if (form_complete) {
record_filter = paste("[", form, "_complete]=2", sep = "")
} else {
record_filter = paste("[", form, "_complete] <> ''", sep = "")
}
formData <- list(uri = url,
"token"=token,
content='record',
format='csv',
type='flat',
csvDelimiter='',
'fields[0]'='record_id',
'forms[0]'=form,
rawOrLabel=raw_v_label,
rawOrLabelHeaders=raw_v_label,
exportCheckboxLabel='false',
exportSurveyFields='true',
exportDataAccessGroups='false',
returnFormat='csv',
filterLogic=record_filter)
response <- httr::POST(url, body = formData, encode = "form")
df <- httr::content(response)
if (nrow(df) >= 1) {
df <- dplyr::filter(df, !stringr::str_detect(record_id, "TEST"))
df <- dplyr::filter(df, !stringr::str_detect(record_id, "test"))
df <- dplyr::filter(df, !stringr::str_detect(record_id, "IRB"))
df <- dplyr::filter(df, !stringr::str_detect(record_id, "D"))
df <- dplyr::filter(df, record_id != '496' & record_id != '497' & record_id != '498' & record_id != '499')
} else {
print('no data returned - may need to set form_complete = F')
}
return (df)
}
x = get_orca_data(token, form='mice_visit_notes_4m', form_complete = F) %>%
filter(redcap_event_name == 'mice_4month_arm_1')
View(x)
record_filter = paste("[", form, "_complete] <> ''", sep = "")
form='mice_visit_notes_arm_4'
form='mice_visit_notes_4m'
record_filter = paste("[", form, "_complete] <> ''", sep = "")
record_filter
get_orca_data <- function(token = token, form = form, raw_v_label = 'raw', form_complete = T) {
if (form_complete) {
record_filter = paste("[", form, "_complete]=2", sep = "")
} else {
record_filter = paste("[", form, '_complete] <> ""', sep = "")
}
formData <- list(uri = url,
"token"=token,
content='record',
format='csv',
type='flat',
csvDelimiter='',
'fields[0]'='record_id',
'forms[0]'=form,
rawOrLabel=raw_v_label,
rawOrLabelHeaders=raw_v_label,
exportCheckboxLabel='false',
exportSurveyFields='true',
exportDataAccessGroups='false',
returnFormat='csv',
filterLogic=record_filter)
response <- httr::POST(url, body = formData, encode = "form")
df <- httr::content(response)
if (nrow(df) >= 1) {
df <- dplyr::filter(df, !stringr::str_detect(record_id, "TEST"))
df <- dplyr::filter(df, !stringr::str_detect(record_id, "test"))
df <- dplyr::filter(df, !stringr::str_detect(record_id, "IRB"))
df <- dplyr::filter(df, !stringr::str_detect(record_id, "D"))
df <- dplyr::filter(df, record_id != '496' & record_id != '497' & record_id != '498' & record_id != '499')
} else {
print('no data returned - may need to set form_complete = F')
}
return (df)
}
x = get_orca_data(token, form='mice_visit_notes_4m', form_complete = F) %>%
filter(redcap_event_name == 'mice_4month_arm_1')
x = get_orca_data(token, form='mice_visit_notes_4m', form_complete = F) %>%
filter(redcap_event_name == 'mice_4month_arm_4')
View(x)
visit_notes_4m <- get_orca_data(orca_token, form='mice_visit_notes_4m', form_complete = F)
visit_notes_4m <- visit_notes_4m %>%
filter(redcap_event_name == "mice_4month_arm_4" & str_detect(record_id, 'mc_')) %>%
select(record_id, mc_visit_date_4m, mc_visit_date2_4m)
View(visit_notes_4m)
mice_4m <- mice_4m %>%
left_join(visit_notes_4m, by='record_id')
library(OrcaData2)
library(tidyverse)
setwd("/Volumes/ISLAND/Projects/MICE/Recruitment")
scr_token <- '950056F36783568FBA0900EFAE8AA4A4'
orca_token <- '25120FD84FFDA3B220617BDF23B680CD'
tracking_info <- get_orca_data(scr_token, form='tracking_info', form_complete = F)
consents <- get_orca_field(scr_token, field='mice_consent_date') %>%
select(record_id, mice_consent_date)
tracking_info <- tracking_info %>%
filter(str_detect(mice_id, 'mc_') & !str_detect(mice_id, 'D') & !is.na(mice_returned)) %>%
left_join(consents, by='record_id') %>%
select(mice_id, record_id, mice_consent_date, mice_mailed_date, mice_returned) %>%
rename(sri = record_id) %>%
mutate(pilot = ifelse(mice_consent_date <= as.Date('2024-11-01'), 1, 0)) %>%
arrange(mice_consent_date)
#PULLING 4M INFO
mice_4m = get_orca_field(orca_token, field='record_id')
mice_4m <- mice_4m %>%
filter(redcap_event_name == 'mice_participant_m_arm_4' & str_detect(record_id, 'mc_')) %>%
select(-redcap_event_name) %>%
mutate(pre_visit_scheduled = 1)
visit_notes_4m <- get_orca_data(orca_token, form='mice_visit_notes_4m', form_complete = F)
visit_notes_4m <- visit_notes_4m %>%
filter(redcap_event_name == "mice_4month_arm_4" & str_detect(record_id, 'mc_')) %>%
select(record_id, mc_visit_date_4m, mc_visit_date2_4m)
mice_4m <- mice_4m %>%
left_join(visit_notes_4m, by='record_id')
mice_4m <- mice_4m %>%
rename(mice_id = record_id)
tracking_info <- tracking_info %>%
left_join(mice_4m, by='mice_id')
set.seed(123)
n <- nrow(tracking_info)
tracking_info$new_record_id <- sample(100:999, n, replace = FALSE)
tracking_info$tasso_id <- paste0('T', as.character(tracking_info$new_record_id))
tracking_info$new_record_id <- sprintf("%03d", 1:n)
tracking_info$tasso_id <- paste0('T', as.character(tracking_info$new_record_id))
tracking_info <- tracking_info %>%
select(mice_id, tasso_id, sri, mice_consent_date, mice_mailed_date, mice_returned, pilot, pre_visit_scheduled, mc_visit_date_4m, mc_visit_date2_4m)
View(visit_notes_4m)
tracking_info <- get_orca_data(scr_token, form='tracking_info', form_complete = F)
View(tracking_info)
tracking_info <- tracking_info %>%
filter(str_detect(mice_id, 'mc_') & !str_detect(mice_id, 'D') & !is.na(mice_returned)) %>%
left_join(consents, by='record_id') %>%
select(mice_id, record_id, mice_id2, twin_id, mice_consent_date, mice_mailed_date, mice_returned) %>%
rename(sri = record_id) %>%
mutate(pilot = ifelse(mice_consent_date <= as.Date('2024-11-01'), 1, 0)) %>%
arrange(mice_consent_date)
View(tracking_info)
tracking_info <- get_orca_data(scr_token, form='tracking_info', form_complete = F)
problems(tracking_info)
tracking_info <- get_orca_data(scr_token, form='tracking_info', form_complete = T)
View(tracking_info)
twin_ids <- get_orca_field(scr_token, field='twin_id')
problems(twin_ids)
twin_ids <- get_orca_field(token, field='mc_visit_date_4m')
token <- '950056F36783568FBA0900EFAE8AA4A4'
orca_token <- '25120FD84FFDA3B220617BDF23B680CD'
mice_record_id
mice_record_id = 'mc_153'
mice_ids <- get_orca_field(token, field='mice_id')
scr_token <- '950056F36783568FBA0900EFAE8AA4A4'
mice_ids <- get_orca_field(scr_token, field='mice_id')
View(mice_ids)
mice_ids <- mice_ids %>%
filter(mice_id == mice_record_id)
sri = mice_ids$record_id[1]
prenatal_surveys = get_orca_field(scr_token, field='prams_complete') %>%
filter(record_id == sri)
pch_complete = get_orca_field(scr_token, field='pch_enroll_complete') %>%
filter(record_id == sri)
blood_returned = get_orca_field(scr_token, field='mice_returned') %>%
filter(record_id == sri)
mc_consent <- get_orca_field(scr_token, field='mice_consent_date') %>%
filter(record_id == sri)
prenatal <- ifelse(nrow(prenatal_surveys) == 1 & prenatal_surveys$prams_complete[1] == 2, 1, 0)
blood <- as.Date(ifelse(nrow(blood_returned) == 1, blood_returned$mice_returned[1], NA))
blood_valid <- ifelse(as.Date(mc_consent$mice_consent_date[1]) >= as.Date('2024-11-01'), 1, 0)
import_file <- data.frame(record_id = mice_record_id,
redcap_event_name = 'mice_participant_m_arm_4',
screener_record_id = sri,
prenatal_yesno = prenatal,
mc_blood_date = blood,
mc_blood_valid = blood_valid)
if (nrow(pch_complete) == 1) {
peach_pp <- get_orca_field(token='B17171C96E09FE75231D605CBCE4B249', field='screener_record_id')
peach_pp <- peach_pp %>%
filter(screener_record_id == sri)
pch_id = peach_pp$record_id[1]
import_file$pch_id = pch_id
}
View(import_file)
setwd("~/Desktop")
write_csv(import_file, 'test.csv', na="")
View(tracking_info)
#!/usr/bin/env Rscript
token <- "25120FD84FFDA3B220617BDF23B680CD"
url <- "https://redcap.nyu.edu/api/"
formData <- list("token"=token,
content='record',
action='export',
format='csv',
type='flat',
csvDelimiter='',
'fields[0]'='record_id',
'fields[1]'='twin_id',
rawOrLabel='raw',
rawOrLabelHeaders='raw',
exportCheckboxLabel='false',
exportSurveyFields='false',
exportDataAccessGroups='false',
returnFormat='json',
filterLogic='[field] <> ""'
)
response <- httr::POST(url, body = formData, encode = "form")
result <- httr::content(response)
print(result)
formData <- list("token"=token,
content='record',
action='export',
format='csv',
type='flat',
csvDelimiter='',
'fields[0]'='record_id',
'fields[1]'='twin_id',
rawOrLabel='raw',
rawOrLabelHeaders='raw',
exportCheckboxLabel='false',
exportSurveyFields='false',
exportDataAccessGroups='false',
returnFormat='json',
filterLogic='[twin_id] <> ""'
)
response <- httr::POST(url, body = formData, encode = "form")
result <- httr::content(response)
View(result)
formData <- list("token"=token,
content='record',
action='export',
format='csv',
type='flat',
csvDelimiter='',
'fields[0]'='record_id',
'fields[1]'='mc_visit_date_4m',
rawOrLabel='raw',
rawOrLabelHeaders='raw',
exportCheckboxLabel='false',
exportSurveyFields='false',
exportDataAccessGroups='false',
returnFormat='json',
filterLogic='[mc_visit_date_4m] <> ""'
)
response <- httr::POST(url, body = formData, encode = "form")
result <- httr::content(response)
View(result)
formData <- list("token"=token,
content='record',
action='export',
format='csv',
type='flat',
csvDelimiter='',
'fields[0]'='record_id',
'fields[1]'='twin_id',
rawOrLabel='raw',
rawOrLabelHeaders='raw',
exportCheckboxLabel='false',
exportSurveyFields='false',
exportDataAccessGroups='false',
returnFormat='json',
filterLogic='[twin_id] <> ""'
)
response <- httr::POST(url, body = formData, encode = "form")
result <- httr::content(response)
View(result)
paste("[", field, '] <> ""', sep = "")
field = 'twin_id'
paste("[", field, '] <> ""', sep = "")
get_orca_field <- function(token = token, field=field, raw_v_label = 'raw') {
formData <- list(uri = url,
"token"=token,
content='record',
format='csv',
type='flat',
csvDelimiter='',
'fields[0]'='record_id',
'fields[1]' = field,
rawOrLabel=raw_v_label,
rawOrLabelHeaders=raw_v_label,
exportCheckboxLabel='false',
exportSurveyFields='false',
exportDataAccessGroups='false',
returnFormat='csv',
filterLogic=paste("[", field, '] <> ""', sep = ""))
response <- httr::POST(url, body = formData, encode = "form")
df <- httr::content(response)
df[df == -888] = NA
df[df == 888] = NA
df[df == 8888] = NA
df[df == -999] = NA
df[df == 999] = NA
df[df == 9999] = NA
df <- dplyr::select(df, record_id, redcap_event_name, all_of(field))
df <- df[!is.na(df[[field]]),]
df <- dplyr::filter(df, !stringr::str_detect(record_id, "TEST"))
df <- dplyr::filter(df, !stringr::str_detect(record_id, "test"))
df <- dplyr::filter(df, !stringr::str_detect(record_id, "IRB"))
df <- dplyr::filter(df, !stringr::str_detect(record_id, "D"))
df <- dplyr::filter(df, record_id != '496' & record_id != '497' & record_id != '498' & record_id != '499')
return (df)
}
get_orca_field(token, field='twin_id')
get_orca_field(token, field='mc_visit_date_4m')
get_orca_data(token, form='mice_visit_notes_4m')
get_orca_data(token, form='mice_visit_notes_4m', form_complete = F)
x = get_orca_data(token, form='mice_visit_notes_4m', form_complete = F)
x = get_orca_data(token, form='mice_visit_notes_4m', form_complete = F) %>%
filter(redcap_event_name == 'mice_4months_arm_4')
x = get_orca_data(token, form='mice_visit_notes_4m', form_complete = F)
View(x)
x = get_orca_data(token, form='mice_visit_notes_4m', form_complete = F) %>%
filter(redcap_event_name == 'mice_4month_arm_4')
View(x)
setwd("~/Documents/GitHub/OrcaData2")
remove.packages('OrcaData2')
devtools::install_github('amyhume/OrcaData2')
