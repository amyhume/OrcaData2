labs() +
theme_void()
plot
plot <-
ggplot(cecile_device, aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#d56f80', '#c2d489'))  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#c33149', '#a8c256')) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone")) +
labs() +
theme_void()
plot
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#d56f80', '#c2d489'), position = position_stack(reverse = TRUE)  +
coord_polar('y') +
plot <-
ggplot(cecile_device, aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#d56f80', '#c2d489'), position = position_stack(reverse = TRUE)  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#c33149', '#a8c256'), position = position_stack(reverse = TRUE) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone")) +
labs() +
theme_void()
plot
labs() +
labs()
plot <- ggplot(cecile_device, aes(x = category, y = percent)) +
geom_col(
data = subset(cecile_device, category == 'laptop'),
aes(fill = value_type),
fill = c('darkgreen', 'lightgreen')
) +
geom_col(
data = subset(cecile_device, category == 'phone'),
aes(fill = value_type),
fill = c('darkblue', 'lightblue')
) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop", "phone")) +
scale_fill_manual(
values = c('darkgreen', 'lightgreen', 'darkblue', 'lightblue'),
name = 'Value Type'
) +
guides(fill = guide_legend(
title = 'Value Type',
override.aes = list(fill = c('darkgreen', 'lightgreen', 'darkblue', 'lightblue')),
labels = c('Label 1', 'Label 2', 'Label 3', 'Label 4')  # Add your custom legend labels here
)) +
theme_void()
plot <-
ggplot(cecile_device, aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#d56f80', '#c2d489'), position = position_stack(reverse = TRUE)  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#c33149', '#a8c256'), position = position_stack(reverse = TRUE) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone")) +
labs()
plot
scale_x_discrete(limits = c(" ", "laptop","phone"))
plot <- ggplot(cecile_device, aes(x = category, y = percent)) +
geom_col(
data = subset(cecile_device, category == 'laptop'),
aes(fill = value_type),
fill = c('darkgreen', 'lightgreen')
) +
geom_col(
data = subset(cecile_device, category == 'phone'),
aes(fill = value_type),
fill = c('darkblue', 'lightblue')
) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop", "phone")) +
scale_fill_manual(
values = c('darkgreen', 'lightgreen', 'darkblue', 'lightblue'),
name = 'Value Type'
) +
guides(fill = guide_legend(
title = 'Value Type',
override.aes = list(fill = c('darkgreen', 'lightgreen', 'darkblue', 'lightblue')),
labels = c('Label 1', 'Label 2', 'Label 3', 'Label 4')  # Add your custom legend labels here
)) +
theme_void()
plot <-
ggplot(cecile_device, aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#d56f80', '#c2d489'), position = position_stack(reverse = TRUE)  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#c33149', '#a8c256'), position = position_stack(reverse = TRUE) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone"))
plot
plot <-
ggplot(cecile_device, aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#d56f80', '#c2d489'), position = position_stack(reverse = TRUE))  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#c33149', '#a8c256'), position = position_stack(reverse = TRUE)) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone"))
plot
plot <-
ggplot(cecile_device, aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#d56f80', '#c2d489'), position = position_stack(reverse = TRUE))  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#c33149', '#a8c256')) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone"))
plot
cecile_device$category <- factor(cecile_device$category, levels = c('phone', 'laptop'))
View(cecile_device)
plot <-
ggplot(cecile_device, aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#d56f80', '#c2d489'))  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#c33149', '#a8c256')) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone"))
plot
cecile_device$category <- factor(cecile_device$category, levels = c('laptop', phone))
plot <-
ggplot(cecile_device, aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#d56f80', '#c2d489'))  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#c33149', '#a8c256')) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone"))
plot
#DONUT
cecile_device <- cecile %>%
filter(category == 'phone' | category == 'laptop')
cecile_device$category <- factor(cecile_device$category, levels = c('laptop', 'phone'))
plot <-
ggplot(cecile_device, aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#d56f80', '#c2d489'))  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#c33149', '#a8c256')) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone"))
plot
plot <- cecile_device %>%
ggplot(aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#d56f80', '#c2d489'))  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#c33149', '#a8c256')) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone"))
plot
plot <- cecile_device %>%
ggplot(aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#d56f80', '#c2d489'))  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#c33149', '#a8c256')) +
plot
plot <- cecile_device %>%
ggplot(aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#d56f80', '#c2d489'))  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#c33149', '#a8c256'))
plot
plot <- cecile_device %>%
ggplot(aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#c33149', '#a8c256'))  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#d56f80', '#c2d489'))
plot
plot <- cecile_device %>%
ggplot(aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#c33149', '#a8c256'))  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#d56f80', '#c2d489')) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone"))
plot
plot <- cecile_device %>%
ggplot(aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#c33149', '#a8c256'))  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#d56f80', '#c2d489')) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone")) +
theme_void()
plot
plot <- cecile_device %>%
ggplot(aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#a84142', '#0f7173'))  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#f05d5e', '#579c9d')) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone")) +
theme_void()
plot
plot <- cecile_device %>%
ggplot(aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#e65156', '#0f7173'))  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#ff5a5f', '#579c9d')) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone")) +
theme_void()
plot
plot <- cecile_device %>%
ggplot(aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#cc484c', '#0f7173'))  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#ff5a5f', '#579c9d')) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone")) +
theme_void()
plot
plot <- cecile_device %>%
ggplot(aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#cc484c', '#087e8b'))  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#ff5a5f', '#3998a2')) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone")) +
theme_void()
plot
library(tidyverse)
setwd("/Users/amh9785/Documents/ORCA/metadata")
setwd("/Volumes/ISLAND/User_Folders/Amy_Hume/ORCA/metadata")
library(tidyverse)
setwd("/Volumes/ISLAND/User_Folders/Amy_Hume/ORCA/metadata")
long <- read.csv('orca_metadata_long.csv', na.strings="")
meta <- read.csv('orca_metadata.csv', na="")
long <- long %>%
mutate(perc_usable = (usable / (usable + not_usable)) * 100) %>%
mutate(perc_unusable = 100 - perc_usable) %>%
pivot_longer(cols = c(perc_usable, perc_unusable), names_to = 'value_type', values_to = 'percent')
#another format - grouped bar chart with usable / unusable on legend, n on y axis, and category on x axis? - grouped by task?>
cecile <- long %>%
filter(task=='cecile')
cecile_plot <- cecile %>%
ggplot(aes(x=category, y=n, fill=value_type)) +
geom_col(position="dodge")
cecile_plot
cecile_device$category <- factor(cecile_device$category, levels = c('laptop', 'phone'))
long <- read.csv('orca_metadata_long.csv', na.strings="")
meta <- read.csv('orca_metadata.csv', na="")
long <- long %>%
mutate(perc_usable = (usable / (usable + not_usable)) * 100) %>%
mutate(perc_unusable = 100 - perc_usable) %>%
pivot_longer(cols = c(perc_usable, perc_unusable), names_to = 'value_type', values_to = 'percent')
cecile <- long %>%
filter(task=='cecile')
cecile_plot <- cecile %>%
ggplot(aes(x=category, y=n, fill=value_type)) +
geom_col(position="dodge")
cecile_plot
library(tidyverse)
cecile <- long %>%
filter(task=='cecile')
cecile_plot <- cecile %>%
ggplot(aes(x=category, y=n, fill=value_type)) +
geom_col(position="dodge")
cecile_plot
#DONUT
cecile_device <- cecile %>%
filter(category == 'phone' | category == 'laptop')
plot <- cecile_device %>%
ggplot(aes(x=category, y=percent, fill=value_type, color = category)) +
geom_col() +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone")) +
scale_fill_manual(values = c('darkgreen', 'lightgreen')) +
theme_void() +
labs(title = 'Usability of laptops vs. Phones for Cecile')
plot
plot2 <- cecile_device %>%
ggplot(aes(x=category, y=percent)) +
geom_col(data = subset(cecile_device, category=='phone'), aes(fill=value_type), fill=c('#cc484c', '#087e8b'))  +
geom_col(data = subset(cecile_device, category=='laptop'), aes(fill=value_type), fill=c('#ff5a5f', '#3998a2')) +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone")) +
theme_void()
plot2
cecile_plot <- cecile %>%
ggplot(aes(x=category, y=n, fill=value_type)) +
geom_col(position="dodge")
cecile_plot
View(cecile)
View(cecile_device)
View(long)
cecile <- long %>%
pivot_longer(cols = c(usable, not_usable),  names_to = 'value_type2', values_to = 'n')
View(cecile)
cecile_plot
cecile_plot <- cecile %>%
ggplot(aes(x=category, y=, fill=value_type)) +
geom_col(position="dodge")
cecile_plot
data <- read.csv('orca_metadata_long.csv', na.strings="")
long <- data %>%
mutate(perc_usable = (usable / (usable + not_usable)) * 100) %>%
mutate(perc_unusable = 100 - perc_usable) %>%
pivot_longer(cols = c(perc_usable, perc_unusable), names_to = 'value_type', values_to = 'percent')
cecile <- data %>%
pivot_longer(cols = c(usable, not_usable),  names_to = 'value_type2', values_to = 'n')
cecile_plot <- cecile %>%
ggplot(aes(x=category, y=, fill=value_type)) +
geom_col(position="dodge")
cecile_plot
cecile_plot <- cecile %>%
ggplot(aes(x=category, y=, fill=value_type2)) +
geom_col(position="dodge")
cecile_plot
cecile_plot <- cecile %>%
ggplot(aes(x=category, y=n, fill=value_type2)) +
geom_col(position="dodge")
cecile_plot
cecile_plot <- cecile %>%
filter(category == 'phone' | category == 'laptop') %>%
ggplot(aes(x=category, y=n, fill=value_type2)) +
geom_col(position="dodge")
cecile_plot
plot2
plot
plot <- cecile_device %>%
ggplot(aes(x=category, y=percent, fill=value_type)) +
geom_col() +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone")) +
scale_fill_manual(values = c('darkgreen', 'lightgreen')) +
theme_void() +
labs(title = 'Usability of laptops vs. Phones for Cecile')
plot
plot <- cecile_device %>%
ggplot(aes(x=category, y=percent, fill=value_type, color = category)) +
geom_col() +
coord_polar('y') +
scale_x_discrete(limits = c(" ", "laptop","phone")) +
scale_fill_manual(values = c('darkgreen', 'lightgreen')) +
theme_void() +
labs(title = 'Usability of laptops vs. Phones for Cecile')
plot
cecile_plot <- cecile_device %>%
filter(category == 'phone' | category == 'laptop') %>%
ggplot(aes(x=category, y=percent, fill=value_type2)) +
geom_col(position="dodge")
cecile_plot
cecile_plot <- cecile_device %>%
filter(category == 'phone' | category == 'laptop') %>%
ggplot(aes(x=category, y=percent, fill=value_type)) +
geom_col(position="dodge")
cecile_plot
cecile_plot <- cecile_device %>%
filter(category == 'phone' | category == 'laptop') %>%
ggplot(aes(x=category, y=percent, fill=value_type)) +
geom_col(position="stack")
cecile_plot
cecile_plot <- cecile_device %>%
ggplot(aes(x=category, y=percent, fill=value_type)) +
geom_col(position="stack")
cecile_plot
cecile_plot <- cecile_device %>%
ggplot(aes(x=category, y=percent, fill=value_type)) +
geom_col(position="stack")
cecile_plot
cecile_plot <- cecile %>%
ggplot(aes(x=category, y=percent, fill=value_type)) +
geom_col(position="stack")
cecile_plot
cecile_plot <- long %>%
filter(task == 'cecile') %>%
ggplot(aes(x=category, y=percent, fill=value_type)) +
geom_col(position="stack")
cecile_plot
cecile_plot <- long %>%
filter(task == 'cecile') %>%
ggplot(aes(x=category, y=percent, fill=value_type)) +
geom_col(position="group")
cecile_plot
View(long)
install.packages("jsonlite")
library(jsonlite)
setwd("/Users/amyhume/Downloads")
json_data <- fromJSON("Bodhi.json", flatten = TRUE)
write.csv(json_data, "output.csv", row.names = FALSE)
View(json_data)
json_data_flat <- jsonlite::flatten(json_data)
#install.packages("tidyverse") #only have to run this the first time you run it
library(tidyverse)
library(CopeData)
setwd("/Volumes/ISLAND/Projects/COPE/R Scripts/42 Month Scripts")
token <- 'D4DF5D2839A15994FCEC02E51B81C609'
invites <- read.csv("invites.csv", na.strings = "")
languages <- get_field(token, field = "reentry_language")
languages2 <- get_field(token, field = "bio_pref_language")
timepoints <- get_all_timepoints(token)
timepoints <- timepoints %>%
mutate(infant_6months = case_when(!is.na(infant_6months) ~ 6),
infant_9months = case_when(!is.na(infant_9months) ~ 9),
infant_12months = case_when(!is.na(infant_12months) ~ 12),
infant_18months = case_when(!is.na(infant_18months) ~ 18),
infant_30months = case_when(!is.na(infant_30months) ~ 30)) %>%
unite("timepoints_completed", c("infant_6months", "infant_9months",
"infant_12months", "infant_18months", "infant_30months"), sep = "; ", na.rm = T)
#Languages
languages2$bio_pref_language <- gsub(0, "en", languages2$bio_pref_language)
languages2$bio_pref_language <- gsub(1, "es", languages2$bio_pref_language)
languages_total <- languages %>%
full_join(languages2, by="record_id") %>%
mutate(language = ifelse(is.na(reentry_language), bio_pref_language, reentry_language)) %>%
select(record_id, language)
#cleaning invites
invites <- invites %>%
rename(invite_date = Invitation.send.time, record_id = Record) %>%
select(record_id, invite_date)
invites$invite_date <- gsub(" .*", "", invites$invite_date)
invites$invite_date <- as.Date(invites$invite_date, format = "%Y-%m-%d")
invites <- invites %>%
mutate(age_out = invite_date+228)
invites$age_out <- as.Date(invites$age_out, origin = '1970-01-01')
invites$record_id <- as.character(invites$record_id)
invites <- invites %>%
left_join(languages_total, by="record_id") %>%
left_join(timepoints, by="record_id")
invites <- invites %>%
arrange(age_out)
write_csv(invites, 'invites.csv', na='')
#install.packages("tidyverse") #only have to run this the first time you run it
library(tidyverse)
library(CopeData)
setwd("/Volumes/ISLAND/Projects/COPE/R Scripts/42 Month Scripts")
token <- 'D4DF5D2839A15994FCEC02E51B81C609'
invites <- read.csv("invites.csv", na.strings = "")
languages <- get_field(token, field = "reentry_language")
languages2 <- get_field(token, field = "bio_pref_language")
timepoints <- get_all_timepoints(token)
timepoints <- timepoints %>%
mutate(infant_6months = case_when(!is.na(infant_6months) ~ 6),
infant_9months = case_when(!is.na(infant_9months) ~ 9),
infant_12months = case_when(!is.na(infant_12months) ~ 12),
infant_18months = case_when(!is.na(infant_18months) ~ 18),
infant_30months = case_when(!is.na(infant_30months) ~ 30),
child_42months = case_when(!is.na(child_42months) ~ 42)) %>%
unite("timepoints_completed", c("infant_6months", "infant_9months",
"infant_12months", "infant_18months", "infant_30months", "child_42months"), sep = "; ", na.rm = T)
#Languages
languages2$bio_pref_language <- gsub(0, "en", languages2$bio_pref_language)
languages2$bio_pref_language <- gsub(1, "es", languages2$bio_pref_language)
languages_total <- languages %>%
full_join(languages2, by="record_id") %>%
mutate(language = ifelse(is.na(reentry_language), bio_pref_language, reentry_language)) %>%
select(record_id, language)
#cleaning invites
invites <- invites %>%
rename(invite_date = Invitation.send.time, record_id = Record) %>%
select(record_id, invite_date)
invites$invite_date <- gsub(" .*", "", invites$invite_date)
invites$invite_date <- as.Date(invites$invite_date, format = "%Y-%m-%d")
invites <- invites %>%
mutate(age_out = invite_date+228)
invites$age_out <- as.Date(invites$age_out, origin = '1970-01-01')
invites$record_id <- as.character(invites$record_id)
invites <- invites %>%
left_join(languages_total, by="record_id") %>%
left_join(timepoints, by="record_id")
invites <- invites %>%
arrange(age_out)
write_csv(invites, 'invites.csv', na='')
#install.packages("tidyverse") #only have to run this the first time you run it
library(tidyverse)
library(CopeData)
setwd("/Volumes/ISLAND/Projects/COPE/R Scripts/42 Month Scripts")
token <- 'D4DF5D2839A15994FCEC02E51B81C609'
invites <- read.csv("invites.csv", na.strings = "")
languages <- get_field(token, field = "reentry_language")
languages2 <- get_field(token, field = "bio_pref_language")
timepoints <- get_all_timepoints(token)
timepoints <- timepoints %>%
mutate(infant_6months = case_when(!is.na(infant_6months) ~ 6),
infant_9months = case_when(!is.na(infant_9months) ~ 9),
infant_12months = case_when(!is.na(infant_12months) ~ 12),
infant_18months = case_when(!is.na(infant_18months) ~ 18),
infant_30months = case_when(!is.na(infant_30months) ~ 30),
child_42months = case_when(!is.na(child_42months) ~ 42)) %>%
unite("timepoints_completed", c("infant_6months", "infant_9months",
"infant_12months", "infant_18months", "infant_30months", "child_42months"), sep = "; ", na.rm = T)
#Languages
languages2$bio_pref_language <- gsub(0, "en", languages2$bio_pref_language)
languages2$bio_pref_language <- gsub(1, "es", languages2$bio_pref_language)
languages_total <- languages %>%
full_join(languages2, by="record_id") %>%
mutate(language = ifelse(is.na(reentry_language), bio_pref_language, reentry_language)) %>%
select(record_id, language)
#cleaning invites
invites <- invites %>%
rename(invite_date = Invitation.send.time, record_id = Record) %>%
select(record_id, invite_date)
invites$invite_date <- gsub(" .*", "", invites$invite_date)
invites$invite_date <- as.Date(invites$invite_date, format = "%Y-%m-%d")
invites <- invites %>%
mutate(age_out = invite_date+228)
invites$age_out <- as.Date(invites$age_out, origin = '1970-01-01')
invites$record_id <- as.character(invites$record_id)
invites <- invites %>%
left_join(languages_total, by="record_id") %>%
left_join(timepoints, by="record_id")
invites <- invites %>%
arrange(age_out)
write_csv(invites, 'invites.csv', na='')
get_all_data <- function(token) {
formData <- list("token"=token,
content='record',
action='export',
format='csv',
type='flat',
csvDelimiter='',
rawOrLabel='raw',
rawOrLabelHeaders='raw',
exportCheckboxLabel='false',
exportSurveyFields='false',
exportDataAccessGroups='false',
returnFormat='json'
)
response <- httr::POST(url, body = formData, encode = "form")
result <- httr::content(response)
return(result)
}
token <- '25120FD84FFDA3B220617BDF23B680CD'
x <- get_all_data(token)
url <- 'https://redcap.nyu.edu/api/'
library(redcapAPI)
x <- get_all_data(token)
View(x)
setwd("/Users/amyhume/OrcaData2")
roxygen2::roxygenise()
roxygen2::roxygenise()
setwd("/Users/amyhume/OrcaData2")
roxygen2::roxygenise()
install.packages("redcapAPI")
