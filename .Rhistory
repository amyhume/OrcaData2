select(-X15) %>%
filter(!is.na(Week))
temp_data <- data[item == 'X']
temp_data <- data[data[item == 'X']]
filtered_data <- data %>%
filter(!!sym(item) == "X")
View(filtered_data)
View(filtered_data)
data$event_name
filtered_data$event_name
formatted_string <- paste0("[event-name] = '", filtered_data$event_name, "'", collapse = " or ")
formatted_string
for (row in 1:nrow(item_data)) {
item = item_data$field_name[row]
filtered_data <- data %>%
filter(!!sym(item) == "X")
formatted_string <- paste0("[event-name] = '", filtered_data$event_name, "'", collapse = " or ")
item_data$logic[row] <- formatted_string
}
View(item_data)
item_data$field_name <- tolower(item_data$field_name)
table(data)
table(data$Anxiety_DifficultiesPilingUp_PM)
table(data$Anxiety_NoGoodReason_PM)
table(data$Attention_TroubleConcentrating_PM)
write_csv(item_data, 'item_data.csv', na="")
library(OrcaData2)
library(tidyverse)
library(zipcodeR)
library(maps)
setwd("/Volumes/ISLAND/Projects/ORCA/ORCA 2.0/Recruitment")
token <- '950056F36783568FBA0900EFAE8AA4A4'
#Pulling screener responses within time frame
screener <- get_orca_screener(token, min_date_time = "7/16/2024  08:13:20")
#Pulling screener responses within time frame
screener <- get_orca_screener(token, min_date_time = "2024-07-16 08:13:19")
View(screener)
contact_log <- get_orca_data(token, form='contact_log', form_complete = F) %>%
filter(!is.na(contact_log_complete))
contact_log <- contact_log %>%
filter(is.na(orca_contact_yesno)) %>%
select(record_id) %>%
mutate(new=1)
screener <- screener %>%
left_join(contact_log, by='record_id') %>%
filter(new == 1) %>%
select(-new)
#determining study eligibility
screener <- study_eligibility(screener)
library(OrcaData2)
library(tidyverse)
library(zipcodeR)
library(maps)
#determining study eligibility
screener <- study_eligibility(screener)
detach("package:OrcaData2", unload = TRUE)
remove.packages('OrcaData2')
install.packages('amyhume/OrcaData2')
library(OrcaData2)
#determining study eligibility
screener <- study_eligibility(screener)
ls("package:OrcaData2")
library(OrcaData2)
devtools::install_github("amyhume/OrcaData2")
library(OrcaData2)
#determining study eligibility
screener <- study_eligibility(screener)
#removing orca 1.0 into separate df
orca_1 <- screener %>%
filter(orca_study_enrollment == 'ORCA 1.0')
screener <- screener %>%
filter(orca_study_enrollment != 'ORCA 1.0')
#Screening out fraudulence
screener_checked <- screen_fraudulence(screener)
ineligible_ages <- screener_checked$ineligible_ages
duplicate_contacts <- screener_checked$duplicate_contacts
impossible_due_dates <- screener_checked$impossible_due_dates
failed_attention_checks <- screener_checked$failed_attention_checks
flagged_referrals <- screener_checked$flagged_referrals
screener_checked <- screen_fraudulence(screener)
flagged_emails <- read.csv('./Ineligible/flagged_emails.csv', na.strings="")
#Screening out fraudulence
screener_checked <- screen_fraudulence(screener)
screened <- screener_checked$data
ineligible_ages <- screener_checked$ineligible_ages
duplicate_contacts <- screener_checked$duplicate_contacts
impossible_due_dates <- screener_checked$impossible_due_dates
failed_attention_checks <- screener_checked$failed_attention_checks
flagged_referrals <- screener_checked$flagged_referrals
View(duplicate_contacts)
View(duplicate_contacts)
mice_bl <- screened %>%
filter(orca_study_enrollment == 'MICE BL') %>%
select(-due_date, -pregnant_yesno)
screened <- screened %>%
filter(orca_study_enrollment != 'MICE BL')
write_csv(screened, 'screener.csv', na="")
write_csv(mice_bl, 'mice_baseline.csv', na="")
library(OrcaData2)
library(tidyverse)
setwd("/Volumes/ISLAND/Projects/ORCA/ORCA 2.0/Recruitment/8 Months")
token <- '25120FD84FFDA3B220617BDF23B680CD'
threshold = as.POSIXct("2024-07-15 06:39:01", format="%Y-%m-%d %H:%M:%S")
invites <- read.csv('invites.csv', na.strings="")
library(OrcaData2)
library(tidyverse)
setwd("/Volumes/ISLAND/Projects/ORCA/ORCA 2.0/Recruitment/8 Months")
token <- '25120FD84FFDA3B220617BDF23B680CD'
threshold = as.POSIXct("2024-07-19 07:15:01", format="%Y-%m-%d %H:%M:%S")
invites <- read.csv('invites.csv', na.strings="")
invites <- invites %>%
select(Record, X.Notification.send.time) %>%
rename(record_id = Record, invite_date = X.Notification.send.time)
demo <- get_orca_data(token, form='sociodemographic')
demo <- demo %>%
select(record_id, child_dob, zip_code)
eligible <- get_orca_field(token, field='longitudinal_yesno')
eligible <- eligible %>%
select(-redcap_event_name)
demo <- demo %>%
left_join(eligible, by='record_id')
#ages & timezone
demo$current_age <- as.numeric(difftime(Sys.Date(), demo$child_dob, units="days"))
demo$timezone <- calculate_timezone(demo$zip_code)
demo <- demo %>%
filter(current_age >= 228 & current_age < 259 & longitudinal_yesno == 1)
invites$record_id <- as.character(invites$record_id)
invites <- invites %>%
full_join(demo, by='record_id')
invites$invite_date <- as.POSIXct(invites$invite_date, format="%m-%d-%Y %H:%M")
invites <- invites %>%
select(record_id, invite_date, child_dob, zip_code, timezone) %>%
filter(invite_date >= threshold) %>%
mutate(missed = NA)
for (row in 1:nrow(invites)) {
if (is.na(invites$invite_date[row])) {
print(paste0("Invite has not been sent for record ", invites$record_id[row]))
invites$missed[row] <- 1
}
}
View(invites)
write_csv(invites, 'invites.csv', na="")
library(OrcaData2)
get_visit_n(token, timepoint=4)
token <- '25120FD84FFDA3B220617BDF23B680CD'
get_visit_n(token, timepoint=4)
get_visit_n(token, timepoint=8)
get_visit_n(token, timepoint=4)
visits <- get_orca_field(token, field='visit_date_4m')
library(tidyverse)
visits <- visits %>%
filter(!str_detect(record_id, 'TEST'))
visits <- visits %>%
filter(!str_detect(record_id, 'P'))
visits <- visits %>%
filter(!str_detect(record_id, 'p'))
visits2 <- get_orca_field(token, field='visit_date_8m')
View(visits2)
screener <- '950056F36783568FBA0900EFAE8AA4A4'
prams <- get_orca_field(screener, field='prams_complete')
View(prams)
prams <- prams %>%
filter(prams_complete == 2)
info <- get_orca_field(token, field='screener_record_id')
View(info)
prams <- prams %>%
rename(screener_record_id = record_id)
info <- info %>%
left_join(prams, by='screener_record_id')
View(info)
info <- info %>%
filter(prams_complete == 2)
library(OrcaData2)
library(tidyverse)
library(zipcodeR)
library(maps)
setwd("/Volumes/ISLAND/Projects/ORCA/ORCA 2.0/Recruitment")
token <- '950056F36783568FBA0900EFAE8AA4A4'
#Pulling screener responses within time frame
screener <- get_orca_screener(token, min_date_time = "2024-07-22 00:00:00")
View(screener)
prenatal <- screener %>%
filter(child_yesno == 1 & pregnant_yesno == 0)
postnatal <- screener %>%
filter(pregnant_yesno == 1)
screener <- screener %>%
filter(rec_source == 'Social Media')
#Pulling screener responses within time frame
screener <- get_orca_screener(token, min_date_time = "2024-07-22 00:00:00")
View(prenatal)
screener <- screener %>%
filter(rec_source == 'Social media')
prenatal <- screener %>%
filter(child_yesno == 1 & pregnant_yesno == 0)
postnatal <- screener %>%
filter(pregnant_yesno == 1)
screened <- screen_fraudulence(screener)
screener_checked <- screen_fraudulence(screener)
screened <- screener_checked$data
dup <- screener_checked$duplicate_contacts
View(dup)
View(dup)
prenatal <- screened %>%
filter(child_yesno == 1 & pregnant_yesno == 0)
postnatal <- screened %>%
filter(pregnant_yesno == 1)
#Pulling screener responses within time frame
screener <- get_orca_screener(token, min_date_time = "2024-07-08 00:00:00")
screener <- screener %>%
filter(timestamp <= as.POSIXct("2024-07-15 23:59:59", format = '%Y-%m-%d %H:%M:%S'))
screener <- screener %>%
filter(rec_source == 'Social media')
prenatal <- screened %>%
filter(child_yesno == 1 & pregnant_yesno == 0)
postnatal <- screened %>%
filter(pregnant_yesno == 1)
prenatal <- screener %>%
filter(child_yesno == 1 & pregnant_yesno == 0)
postnatal <- screener %>%
filter(pregnant_yesno == 1)
screener_checked <- screen_fraudulence(screener)
screened <- screener_checked$data
dup <- screener_checked$duplicate_contacts
prenatal <- screened %>%
filter(child_yesno == 1 & pregnant_yesno == 0)
postnatal <- screened %>%
filter(pregnant_yesno == 1)
View(visits2)
#Pulling screener responses within time frame
screener <- get_orca_screener(token, min_date_time = "2024-05-10 00:00:00")
screener <- screener %>%
filter(timestamp <= as.POSIXct("2024-05-24 23:59:59", format = '%Y-%m-%d %H:%M:%S'))
postnatal <- screener %>%
filter(pregnant_yesno == 1)
prenatal <- screener %>%
filter(child_yesno == 1 & pregnant_yesno == 0)
postnatal <- screener %>%
filter(pregnant_yesno == 1)
postnatal <- screener %>%
filter(child_yesno == 1 & pregnant_yesno == 0)
prenatal <- screener %>%
filter(pregnant_yesno == 1)
#Pulling screener responses within time frame
screener <- get_orca_screener(token, min_date_time = "2024-05-10 00:00:00")
screener <- screener %>%
filter(timestamp <= as.POSIXct("2024-05-24 23:59:59", format = '%Y-%m-%d %H:%M:%S'))
screener <- screener %>%
filter(rec_source == 'Social media')
postnatal <- screener %>%
filter(child_yesno == 1 & pregnant_yesno == 0)
prenatal <- screener %>%
filter(pregnant_yesno == 1)
screener_checked <- screen_fraudulence(screener)
screened <- screener_checked$data
dup <- screener_checked$duplicate_contacts
postnatal <- screener %>%
filter(child_yesno == 1 & pregnant_yesno == 0)
prenatal <- screener %>%
filter(pregnant_yesno == 1)
postnatal <- screened %>%
filter(child_yesno == 1 & pregnant_yesno == 0)
prenatal <- screened %>%
filter(pregnant_yesno == 1)
library(CopeData)
token <- 'D4DF5D2839A15994FCEC02E51B81C609'
get_visit_n(token, timepoint = 'child_42months_arm_1')
#install.packages("tidyverse") #only have to run this the first time you run it
library(tidyverse)
library(CopeData)
setwd("/Volumes/ISLAND/Projects/COPE/R Scripts/42 Month Scripts")
token <- 'D4DF5D2839A15994FCEC02E51B81C609'
invites <- read.csv("invites.csv", na.strings = "")
languages <- get_field(token, field = "reentry_language")
languages2 <- get_field(token, field = "bio_pref_language")
timepoints <- get_all_timepoints(token)
timepoints <- timepoints %>%
mutate(infant_6months = case_when(!is.na(infant_6months) ~ 6),
infant_9months = case_when(!is.na(infant_9months) ~ 9),
infant_12months = case_when(!is.na(infant_12months) ~ 12),
infant_18months = case_when(!is.na(infant_18months) ~ 18),
infant_30months = case_when(!is.na(infant_30months) ~ 30),
child_42months = case_when(!is.na(child_42months) ~ 42)) %>%
unite("timepoints_completed", c("infant_6months", "infant_9months",
"infant_12months", "infant_18months", "infant_30months", "child_42months"), sep = "; ", na.rm = T)
#Languages
languages2$bio_pref_language <- gsub(0, "en", languages2$bio_pref_language)
languages2$bio_pref_language <- gsub(1, "es", languages2$bio_pref_language)
languages_total <- languages %>%
full_join(languages2, by="record_id") %>%
mutate(language = ifelse(is.na(reentry_language), bio_pref_language, reentry_language)) %>%
select(record_id, language)
#cleaning invites
invites <- invites %>%
rename(invite_date = Invitation.send.time, record_id = Record) %>%
select(record_id, invite_date)
invites$invite_date <- gsub(" .*", "", invites$invite_date)
invites$invite_date <- as.Date(invites$invite_date, format = "%Y-%m-%d")
invites <- invites %>%
mutate(age_out = invite_date+228)
invites$age_out <- as.Date(invites$age_out, origin = '1970-01-01')
invites$record_id <- as.character(invites$record_id)
invites <- invites %>%
left_join(languages_total, by="record_id") %>%
left_join(timepoints, by="record_id")
invites <- invites %>%
arrange(age_out)
invites <- invites %>%
filter(record_id != '99999999' & record_id != '9999999' & record_id != '99999')
write_csv(invites, 'invites.csv', na='')
library(tidyverse)
library(CopeData)
#Amy WD
setwd("/Volumes/ISLAND/Projects/COPE/R Scripts/42 Month Scripts")
#Amaani WD
#setwd("z:/Projects/COPE/R Scripts/42 Month Scripts")
token <- 'D4DF5D2839A15994FCEC02E51B81C609'
tracker <- read.csv("ivt.csv", na.strings = "")
names <- get_data(token, form="ripple_tracking_information", form_complete = T)
welcome <- get_survey_data(token, form="welcome_to_42_month_follow_up", event = "child_42months_arm_1")
consent <- get_survey_data(token, form="month_consent", event = "child_42months_arm_1")
welcome <- welcome %>%
select(record_id, email, phone, response_status, survey_access_code) %>%
rename(welcome_response = response_status, welcome_code = survey_access_code)
consent <- consent %>%
select(record_id, response_status, survey_access_code) %>%
rename(consent_response = response_status, consent_code = survey_access_code)
names <- names %>%
select(record_id, firstname, lastname)
#Filtering tracker
tracker <- tracker %>%
filter(Status..DO.NOT.EDIT. == "SEND FOLLOW UP TEXT") %>%
rename(record_id = Record_ID) %>%
select(record_id)
tracker <- tracker %>%
left_join(names, by="record_id") %>%
left_join(welcome, by="record_id") %>%
left_join(consent, by="record_id")
tracker <- tracker %>%
mutate(code_to_send = case_when(
welcome_response == 0 ~ 'welcome',
welcome_response == 2 & consent_response == 0 ~ 'consent'
),
extra_info = ifelse(is.na(phone), "find phone number on ripple", NA))
write_csv(tracker, "42m_follow_up_texts.csv", na="")
library(tidyverse)
library(CopeData)
#Amy WD
setwd("/Volumes/ISLAND/Projects/COPE/R Scripts/42 Month Scripts")
#Amaani WD
#setwd("z:/Projects/COPE/R Scripts/42 Month Scripts")
token <- 'D4DF5D2839A15994FCEC02E51B81C609'
tracker <- read.csv("ivt.csv", na.strings = "")
names <- get_data(token, form="ripple_tracking_information", form_complete = T)
welcome <- get_survey_data(token, form="welcome_to_42_month_follow_up", event = "child_42months_arm_1")
consent <- get_survey_data(token, form="month_consent", event = "child_42months_arm_1")
welcome <- welcome %>%
select(record_id, email, phone, response_status, survey_access_code) %>%
rename(welcome_response = response_status, welcome_code = survey_access_code)
consent <- consent %>%
select(record_id, response_status, survey_access_code) %>%
rename(consent_response = response_status, consent_code = survey_access_code)
names <- names %>%
select(record_id, firstname, lastname)
#Filtering tracker
tracker <- tracker %>%
filter(Status..DO.NOT.EDIT. == "SEND FOLLOW UP TEXT") %>%
rename(record_id = Record_ID) %>%
select(record_id)
tracker <- tracker %>%
left_join(names, by="record_id") %>%
left_join(welcome, by="record_id") %>%
left_join(consent, by="record_id")
tracker <- tracker %>%
mutate(code_to_send = case_when(
welcome_response == 0 ~ 'welcome',
welcome_response == 2 & consent_response == 0 ~ 'consent'
),
extra_info = ifelse(is.na(phone), "find phone number on ripple", NA))
write_csv(tracker, "42m_follow_up_texts.csv", na="")
library(tidyverse)
library(CopeData)
#Amy WD
setwd("/Volumes/ISLAND/Projects/COPE/R Scripts/42 Month Scripts")
#Amaani WD
#setwd("z:/Projects/COPE/R Scripts/42 Month Scripts")
token <- 'D4DF5D2839A15994FCEC02E51B81C609'
tracker <- read.csv("ivt.csv", na.strings = "")
names <- get_data(token, form="ripple_tracking_information", form_complete = T)
welcome <- get_survey_data(token, form="welcome_to_42_month_follow_up", event = "child_42months_arm_1")
consent <- get_survey_data(token, form="month_consent", event = "child_42months_arm_1")
welcome <- welcome %>%
select(record_id, email, phone, response_status, survey_access_code) %>%
rename(welcome_response = response_status, welcome_code = survey_access_code)
consent <- consent %>%
select(record_id, response_status, survey_access_code) %>%
rename(consent_response = response_status, consent_code = survey_access_code)
names <- names %>%
select(record_id, firstname, lastname)
#Filtering tracker
tracker <- tracker %>%
filter(Status..DO.NOT.EDIT. == "SEND FOLLOW UP TEXT") %>%
rename(record_id = Record_ID) %>%
select(record_id)
tracker <- tracker %>%
left_join(names, by="record_id") %>%
left_join(welcome, by="record_id") %>%
left_join(consent, by="record_id")
tracker <- tracker %>%
mutate(code_to_send = case_when(
welcome_response == 0 ~ 'welcome',
welcome_response == 2 & consent_response == 0 ~ 'consent'
),
extra_info = ifelse(is.na(phone), "find phone number on ripple", NA))
write_csv(tracker, "42m_follow_up_texts.csv", na="")
#install.packages("tidyverse") #only have to run this the first time you run it
library(tidyverse)
library(CopeData)
setwd("/Volumes/ISLAND/Projects/COPE/R Scripts/42 Month Scripts")
token <- 'D4DF5D2839A15994FCEC02E51B81C609'
invites <- read.csv("invites.csv", na.strings = "")
languages <- get_field(token, field = "reentry_language")
languages2 <- get_field(token, field = "bio_pref_language")
timepoints <- get_all_timepoints(token)
timepoints <- timepoints %>%
mutate(infant_6months = case_when(!is.na(infant_6months) ~ 6),
infant_9months = case_when(!is.na(infant_9months) ~ 9),
infant_12months = case_when(!is.na(infant_12months) ~ 12),
infant_18months = case_when(!is.na(infant_18months) ~ 18),
infant_30months = case_when(!is.na(infant_30months) ~ 30),
child_42months = case_when(!is.na(child_42months) ~ 42)) %>%
unite("timepoints_completed", c("infant_6months", "infant_9months",
"infant_12months", "infant_18months", "infant_30months", "child_42months"), sep = "; ", na.rm = T)
#Languages
languages2$bio_pref_language <- gsub(0, "en", languages2$bio_pref_language)
languages2$bio_pref_language <- gsub(1, "es", languages2$bio_pref_language)
languages_total <- languages %>%
full_join(languages2, by="record_id") %>%
mutate(language = ifelse(is.na(reentry_language), bio_pref_language, reentry_language)) %>%
select(record_id, language)
#cleaning invites
invites <- invites %>%
rename(invite_date = Invitation.send.time, record_id = Record) %>%
select(record_id, invite_date)
invites$invite_date <- gsub(" .*", "", invites$invite_date)
invites$invite_date <- as.Date(invites$invite_date, format = "%Y-%m-%d")
invites <- invites %>%
mutate(age_out = invite_date+228)
invites$age_out <- as.Date(invites$age_out, origin = '1970-01-01')
invites$record_id <- as.character(invites$record_id)
invites <- invites %>%
left_join(languages_total, by="record_id") %>%
left_join(timepoints, by="record_id")
invites <- invites %>%
arrange(age_out)
invites <- invites %>%
filter(record_id != '99999999' & record_id != '9999999' & record_id != '99999')
write_csv(invites, 'invites.csv', na='')
#OrcaData tokens, functions
library(OrcaData)
library(OrcaData2)
detach("package:OrcaData2", unload = TRUE)
detach("package:OrcaData", unload = TRUE)
#OrcaData tokens, functions
library(OrcaData)
library(tidyverse)
library(OrcaData2)
token <- '950056F36783568FBA0900EFAE8AA4A4'
screener <- get_orca_screener(token)
View(screener)
check1 <- screener %>%
#filter(language=="English") %>%
#filter(language == 'Spanish' | str_detect(race, 'Hispanic/Latino')) %>%
filter(timestamp >= "2024-08-22 00:00:00" & timestamp <= "2024-08-30 23:59:59")
View(check1)
weeks_till_birth = difftime(Sys.Date(), check1$due_date, units='weeks')
check1$weeks_till_birth = difftime(Sys.Date(), check1$due_date, units='weeks')
options(scipen = 999)
View(check1)
check1$weeks_till_birth = difftime(check1$due_date, Sys.Date(), units='weeks')
40 - 32
check1 <- check1 %>%
mutate(trimester = 40 - (as.numeric(difftime(due_date, Sys.Date(), units='weeks'))))
check1 <- check1 %>%
mutate(weeks_preg = 40 - (as.numeric(difftime(due_date, Sys.Date(), units='weeks'))),
trimester = case_when(
weeks_preg > 0 & weeks_preg < 13 ~ 1,
weeks_preg >= 13 & weeks_preg < 28 ~ 2,
weeks_preg >= 28 & weeks_preg < 40 ~ 3
))
table(check1$trimester)
screener_checked <- screen_fraudulence(check1)
screener2 <- screener_checked$data
table(screener2$trimester)
data_token <- '25120FD84FFDA3B220617BDF23B680CD'
get_trimester_n(data_token)
#OrcaData2 tokens, functions-----
library(OrcaData2)
detach("package:OrcaData", unload = TRUE)
get_trimester_n(data_token)
setwd("/Users/amyhume/OrcaData2")
roxygen2::roxygenise()
remove.packages('OrcaData2')
devtools::install_github('amyhume/OrcaData2')
#OrcaData2 tokens, functions-----
library(OrcaData2)
exp_invites <- get_expected_invites(cope_token, timepoint = 'infant_6months_arm_1')
#COPE tokens, functions-----
library(CopeData)
cope_token <- 'D4DF5D2839A15994FCEC02E51B81C609'
exp_invites <- get_expected_invites(cope_token, timepoint = 'infant_6months_arm_1')
exp_invites <- get_expected_invites(cope_token, timepoint = 6) #will give you a list of dataset, month n's and graph of expected invites
exp_invites <- get_expected_invites(cope_token, timepoint = 42) #will give you a list of dataset, month n's and graph of expected invites. to extract each run below
